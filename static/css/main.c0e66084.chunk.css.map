{"version":3,"sources":["index.css","Input.scss","../../styles/mixins/_spacing.scss","../../styles/mixins/_typography.scss","../../../node_modules/sass-mq/_mq.scss","SearchBox.scss","../../../styles/mixins/_clearfix.scss","../../../styles/mixins/_typography.scss","../../../../node_modules/sass-mq/_mq.scss","../../../styles/settings/_colors-applied.scss","Checkbox.scss","../../styles/settings/_colors-applied.scss","../../styles/mixins/_clearfix.scss","Radio.scss","Listbox.scss","FiltersList.scss","ActiveFilters.scss","../../../styles/mixins/_spacing.scss","CandidateCard.scss","../../styles/mixins/_links.scss","../../styles/mixins/_text.scss","../../styles/placeholders/_facet.scss","Home.scss","../../styles/settings/_measurements.scss","../../styles/mixins/_container.scss","style.scss","_normalize.scss","core/_global.scss","settings/_typography.scss","mixins/_visually-hidden.scss","core/_typography.scss","mixins/_spacing.scss","mixins/_typography.scss","settings/_colors-applied.scss","../../node_modules/sass-mq/_mq.scss","core/_container.scss","settings/_measurements.scss","mixins/_container.scss","core/_grid.scss","mixins/_clearfix.scss","mixins/_grid.scss","core/_form-group.scss","mixins/_links.scss","core/_links.scss","mixins/_text.scss","core/_lists.scss","components/_button.scss","components/_fieldset.scss","components/_label.scss","components/_delimited.scss"],"names":[],"mappings":"AAAA,KAEE,mJAEY,CACZ,kCAAmC,CACnC,iCACF,CAEA,KACE,yEAEF,CCRA,aACE,aAAA,CACA,UAAA,CAEA,wBAAA,CACA,eAAA,CC0CM,WAAA,CCRA,cARY,CAYd,gBAXY,CFvBhB,uBAAA,CAAA,oBAAA,CAAA,eAAA,CGoOM,4BH7OR,aCsDU,WAAA,CCFA,mBArBU,CAyBZ,wBDFE,CAAA,CEuLF,aH7OR,aE8CQ,cAhBQ,CAiBR,gBAfU,CAAA,CFrBhB,mBACE,sBAAA,CAEA,gBAAA,CACA,0BAAA,CIAJ,YAEE,iBAAA,CACA,kBAAA,CACA,SAAA,CCdA,kBACE,UAAA,CACA,aAAA,CACA,UAAA,CDgBJ,mBAGE,iBAAA,CACA,UAAA,CACA,aAAA,CACA,kBAAA,CACA,WAAA,CACA,uBAAA,CACA,WAvBoB,CA0BpB,qBAAA,CACA,UAAA,CEEM,kBARY,CAYd,wBAXY,CC6MV,4BHrNR,mBE4BU,gBArBU,CAyBZ,gBAxBU,CAAA,CC6MV,aHrNR,mBEsBQ,cAhBQ,CAiBR,gBAfU,CAAA,CC6MV,4BHrNR,mBAmBI,uBAAA,CACA,WAjCwB,CAAA,CAoC1B,yBAEE,eAAA,CAIJ,oDAEE,SAAA,CAGF,+BACE,iBAAA,CACA,KAAA,CACA,MAAA,CAGA,QAAA,CACA,gBAAA,CACA,gBAAA,CE3BM,kBARY,CAYd,wBAXY,CFwChB,aI/C2B,CJiD3B,wBAAA,CAAA,qBAAA,CAAA,oBAAA,CAAA,gBAAA,CACA,mBAAA,CGkKM,4BHnLR,+BENU,gBArBU,CAyBZ,gBAxBU,CAAA,CC6MV,aHnLR,+BEZQ,cAhBQ,CAiBR,gBAfU,CAAA,CF8ClB,oBACE,UAAA,CACA,aAAA,CACA,WAAA,CACA,eAAA,CACA,UAzEoB,CA0EpB,WA1EoB,CA2EpB,wBAAA,CACA,wCAAA,CACA,oBA3EiB,CA4EjB,uBAAA,CACA,2BAAA,CACA,cAAA,CACA,0BACE,sBAAA,CACA,+BAAA,CGgJI,4BH/JR,oBAkBI,UArFwB,CAsFxB,WAtFwB,CAuFxB,oBArFqB,CAAA,CKEzB,gBACE,iBAAA,CACA,kBAAA,CAGA,iBAPoB,CASpB,WAZuB,CP6BjB,cARY,CAYd,gBAXY,COLhB,aCTiB,CP2NX,4BM9NR,gBPqCU,mBArBU,CAyBZ,wBAxBU,CAAA,CC6MV,aM9NR,gBP+BQ,cAhBQ,CAiBR,gBAAA,COlBJ,UPGc,CAAA,COAhB,wDAEE,eAAA,CAIJ,uBAME,SAAA,CAEA,iBAAA,CACA,QAAA,CACA,SAAA,CAEA,QAAA,CAEA,UAzCwB,CA0CxB,WA1CwB,CA4CxB,cAAA,CAIA,SAAA,CAGF,uBAME,UAAA,CAiBA,iBAAA,CAEA,cAAA,CAEA,yBAAA,CNoJM,4BM/KR,uBAkBI,iBAFqB,CAGrB,oBAHqB,CAAA,CAezB,8BACE,UAAA,CAEA,iBAAA,CACA,KAAA,CACA,MAAA,CAEA,UAvFoB,CAwFpB,WAxFoB,CAyFpB,gBAAA,CACA,sBAAA,CAOF,6BAOE,sBAAA,CACA,UAAA,CASA,iBAAA,CACA,UAAA,CACA,UAAA,CAEA,UApBkB,CAqBlB,UApBmB,CAsBnB,wBAAA,CACA,YAAA,CACA,wBAAA,CAGA,4BAAA,CAGA,SAAA,CAEA,sBAAA,CAIF,2DACE,gBAAA,CACA,yBAAA,CAIF,4DAEE,SAAA,CAIF,uBAIE,iBAAA,CAEA,iBAJsB,CE7JtB,6BACE,UAAA,CACA,aAAA,CACA,UAAA,CFiKF,8CAKE,UAAA,CAGF,8CAOE,iBALe,CASjB,qDAGE,OAAA,CACA,UA9BoB,CA+BpB,WA/BoB,CAmCtB,oDAOE,QAAA,CACA,QAAA,CAEA,SATkB,CAUlB,YATmB,CAWnB,wBAAA,CAUA,iGAEE,6BAAA,CAQF,wFAEE,4CACE,CAQN,oCAEI,iGAEE,eAAA,CAGF,wFAEE,yBAAA,CAAA,CG3OR,aACE,iBAAA,CACA,kBAAA,CAGA,iBAPiB,CASjB,WAZuB,CV6BjB,cARY,CAYd,gBAXY,CULhB,aFTiB,CP2NX,4BS9NR,aVqCU,mBArBU,CAyBZ,wBAxBU,CAAA,CC6MV,aS9NR,aV+BQ,cAhBQ,CAiBR,gBAAA,CUlBJ,UVGc,CAAA,CUAhB,kDAEE,eAAA,CAIJ,oBAME,SAAA,CAEA,iBAAA,CACA,QAAA,CACA,SAAA,CAEA,QAAA,CAEA,UAzCwB,CA0CxB,WA1CwB,CA4CxB,cAAA,CAIA,SAAA,CAGF,oBAME,UAAA,CAiBA,iBAAA,CAEA,cAAA,CAEA,yBAAA,CToJM,4BS/KR,oBAkBI,iBAFqB,CAGrB,oBAHqB,CAAA,CAezB,2BACE,UAAA,CAEA,iBAAA,CACA,KAAA,CACA,MAAA,CAEA,UAvFiB,CAwFjB,WAxFiB,CAyFjB,gBAAA,CACA,iBAAA,CACA,sBAAA,CAIF,0BAIE,sBAAA,CACA,UAAA,CAGA,iBAAA,CACA,QAAA,CACA,SAAA,CAEA,OAAA,CACA,QAAA,CAEA,iBAAA,CACA,iBAAA,CAGA,SAAA,CAEA,sBAAA,CAIF,qDACE,gBAAA,CACA,yBAAA,CAIF,sDAEE,SAAA,CAIF,oBAIE,iBAAA,CAEA,iBAJmB,CD9InB,0BACE,UAAA,CACA,aAAA,CACA,UAAA,CCkJF,wCAKE,UAAA,CAGF,wCAOE,iBALe,CASjB,+CAGE,OAAA,CACA,UA9BiB,CA+BjB,WA/BiB,CAmCnB,8CAIE,QAAA,CACA,QAAA,CAEA,gBAAA,CAUA,wFAEE,6BAAA,CAQF,+EAEE,4CACE,CAQN,oCAEI,wFAEE,eAAA,CAGF,+EAEE,yBAAA,CAAA,CCvOR,cACE,aAAA,CAEA,WAAA,CAEA,UAAA,CXoCM,cARY,CAYd,gBAXY,CWzBhB,wBAAA,CVsOM,4BU/OR,cXsDU,mBArBU,CAyBZ,wBAxBU,CAAA,CC6MV,aU/OR,cXgDQ,cAhBQ,CAiBR,gBAfU,CAAA,CWvBhB,oBACE,sBAAA,CACA,gBAAA,CAEA,0BAAA,CCfJ,eACE,kBAAA,CAEA,sDAEE,eAAA,CAIJ,sBACE,eAAA,CCVF,yBACE,kBAAA,CAEA,0EAEE,eAAA,CAIJ,0BC0CQ,kBAAA,CT4LA,4BQtOR,0BCiDU,kBAAA,CAAA,CD5CV,yBAEE,aAAA,CAEA,kBAAA,CAEA,eAAA,CTqBM,cARY,CAYd,gBAXY,CC6MV,4BQjOR,yBTwCU,mBArBU,CAyBZ,wBAxBU,CAAA,CC6MV,aQjOR,yBTkCQ,cAhBQ,CAiBR,gBAfU,CAAA,CC6MV,4BQjOR,yBAYI,oBAAA,CAGA,iBAAA,CACA,eAAA,CAAA,CAMJ,YAGE,oBAAA,CAGA,iBAAA,CACA,kBAN+B,CTIzB,cARY,CAYd,gBAXY,CC6MV,4BQ3MR,YTkBU,mBArBU,CAyBZ,wBAxBU,CAAA,CC6MV,aQ3MR,YTYQ,cAhBQ,CAiBR,gBAfU,CAAA,CSahB,gDAEE,cAAA,CAIJ,wBACE,iBAAA,CAWF,oBACE,YAAA,CAEA,gBAAA,CACA,iBAAA,CAEA,eAAA,CAEA,cAAA,CAEA,0BACE,sBAAA,CACA,uCAAA,CRkKI,4BQ9KR,oBAgBI,wBAAA,CACA,kBAAA,CAEA,0BAGE,yBAAA,CACA,uCAAA,CAAA,CElFN,wBfmCQ,kBARY,CAYd,wBAXY,CerBhB,iBAAA,CACA,kBAAA,CAGA,iBAAA,CAEA,eAAA,Cd4NM,4BczOR,wBfgDU,gBArBU,CAyBZ,gBAxBU,CAAA,CC6MV,aczOR,wBf0CQ,cAhBQ,CAiBR,gBAfU,CAAA,CedhB,+BACE,aAAA,CACA,iBAAA,CAEA,KAAA,CACA,QAAA,CACA,MAAA,CACA,UAAA,CACA,SArB+B,CdwO3B,4BczOR,wBA2BI,iBAAA,CACA,+BACE,SAH+B,CAAA,CAUnC,uCACE,qBAAA,CADF,oCACE,wBAAA,CADF,0CACE,wBAAA,CADF,sCACE,wBAAA,CAIJ,sBACE,oBAAA,CACA,YAAA,CACA,iBAAA,CCzCA,2BACE,aR6Ge,CQ3GjB,8BACE,aRiHuB,CQ/GzB,4BACE,aRqHqB,CQnHvB,6BACE,aRyHsB,COrFxB,4BEjDA,6BAAA,CACA,aTiEuB,CShEvB,qBTuDkB,CStDlB,oCAAA,CACA,oBAAA,CFkDF,sBAEE,YAAA,CACA,eAAA,CftBM,kBARY,CAYd,wBAXY,CeiChB,eAAA,Cd4KM,4BcnLR,sBfNU,gBArBU,CAyBZ,gBAxBU,CAAA,CC6MV,acnLR,sBfZQ,cAhBQ,CAiBR,gBAfU,CAAA,CeoClB,yBf7BQ,cARY,CAYd,gBAXY,CewChB,aP/C2B,CPoNrB,4BczKR,yBfhBU,mBArBU,CAyBZ,wBAxBU,CAAA,CC6MV,aczKR,yBftBQ,cAhBQ,CAiBR,gBAfU,CAAA,CkB9BlB,eAEE,KAAA,CAIA,QAAA,CACA,SAAA,CAGA,WAAA,CAEA,eAAA,CAEA,eAAA,CAEA,YAAA,CAGF,sCAlBE,cAAA,CAEA,OAAA,CACA,QAAA,CAKA,UAoBA,CAVF,uBAKE,4BAAA,CAIA,qBAAA,CACA,uCAAA,CCTF,gEACE,oBAAA,CAEA,QAAA,CACA,SAAA,CACA,cAAA,CACA,eAAA,CACA,cAAA,CACA,uBAAA,CnBSM,cARY,CAYd,gBAXY,CmBGhB,aXkFiB,CPwHX,4BkBvNR,gEnB8BU,mBArBU,CAyBZ,wBAxBU,CAAA,CC6MV,akBvNR,gEnBwBQ,cAhBQ,CAiBR,gBAAA,CmBVJ,UnBLc,CAAA,CmBQhB,4EACE,aX0FqB,CWzFrB,yBAAA,CAKF,mBACE,4EACE,aXoEa,CWnEb,oBAAA,CAAA,CAIJ,4EFlDA,6BAAA,CACA,aTiEuB,CShEvB,qBTuDkB,CStDlB,oCAAA,CACA,oBAAA,CEkDA,oGACE,yBAAA,CAIF,oGACE,SAAA,CACA,QAAA,CAMJ,6BACE,YAAA,CACA,eAAA,CAGF,mBpB3BQ,gBAAA,CAAA,mBAAA,CoB8BN,6BAAA,CACA,wBAAA,CACA,UAAA,ClB4JM,4BkBjKR,mBpBpBU,gBAAA,CAAA,mBAAA,CAAA,CoB4BV,WACE,QAAA,CnB9CM,gBARY,CAYd,wBAXY,CC6MV,4BkBzJR,WnBhCU,iBArBU,CAyBZ,wBAxBU,CAAA,CC6MV,akBzJR,WnBtCQ,cAhBQ,CAiBR,gBAfU,CAAA,CmB2DlB,cACE,aAAA,CACA,iBAAA,CnBtDM,kBARY,CAYd,wBAXY,CC6MV,4BkBlJR,cnBvCU,gBArBU,CAyBZ,gBAxBU,CAAA,CC6MV,akBlJR,cnB7CQ,cAhBQ,CAiBR,gBAfU,CAAA,CmBmElB,qBpBlDQ,kBAAA,CE4LA,4BkB1IR,qBpB3CU,kBAAA,CAAA,CoB+CV,kBACE,YAAA,CACA,cAAA,CACA,sBAAA,CACA,QAAA,CACA,SAAA,CACA,eAAA,CAGF,kBACE,kBCQa,CrBxEP,kBAAA,CoBmEN,SAAA,ClByHM,4BkB7HR,kBpBxDU,kBAAA,CoB8DN,epB9DM,CAAA,CoBkEV,oBpBzEQ,kBAAA,CE4LA,4BkBnHR,oBpBlEU,kBAAA,CAAA,CoBsEV,+BACE,oBAAA,CACA,QAAA,CnBzFM,kBARY,CAYd,wBAXY,CC6MV,4BkB/GR,+BnB1EU,mBArBU,CAyBZ,wBAxBU,CAAA,CC6MV,akB/GR,+BnBhFQ,cAhBQ,CAiBR,gBAfU,CAAA,CmBsGlB,+BACE,oBAAA,CACA,eAAA,CnBjGM,cARY,CAYd,gBAXY,CC6MV,4BkBvGR,+BnBlFU,mBArBU,CAyBZ,wBAxBU,CAAA,CC6MV,akBvGR,+BnBxFQ,cAhBQ,CAiBR,gBAfU,CAAA,CmBgHlB,kBpB/FQ,kBAAA,CAAA,gBAAA,CAAA,mBAAA,CoBmGN,wBXzIkB,CPkOZ,4BkB7FR,kBpBxFU,kBAAA,CAAA,gBAAA,CAAA,mBAAA,CAAA,CoB+FV,oCAGE,UAAA,CACA,yBAAA,CACA,sDAEE,UAAA,CAIJ,eACE,YAAA,CAEA,qCACE,aAAA,ClBuEI,4BkB3ER,eAWI,iBAAA,CACA,kBAAA,CACA,WA3KkB,CA+KlB,sBACE,cAAA,CACA,UAAA,CACA,KAAA,CACA,MAAA,CACA,WApLgB,CAqLhB,QAAA,CACA,+BAAA,CACA,SAAA,CAGF,gDACE,aAAA,CACA,gBAAA,CACA,iBAAA,CACA,WAAA,CAAA,CAKN,uBE7LE,eD0FiB,CCvFjB,gBAAA,CACA,iBAAA,CF4LA,YAAA,CACA,kBAAA,CACA,6BAAA,CAEA,gBAAA,CACA,mBAAA,ClB8BM,4BkBtCR,uBErLI,gBDuGW,CCtGX,iBDsGW,CAAA,CnBoHP,yBkBtCR,uBE9KI,gBAAA,CACA,iBAAA,CAAA,CFwLJ,sBACE,QAAA,CAOF,qBEhNE,eD0FiB,CCvFjB,gBAAA,CACA,iBAAA,CF+MA,oBAAA,ClBgBM,4BkBnBR,qBExMI,gBDuGW,CCtGX,iBDsGW,CAAA,CnBoHP,yBkBnBR,qBEjMI,gBAAA,CACA,iBAAA,CAAA,CpBmNI,4BkBnBR,qBAiBI,oBAAA,CAAA,CAOJ,uBAEE,gBAtOsC,CAuOtC,mBAvOsC,ClB+NhC,4BkBKR,uBAKI,eAAA,CACA,WApPkB,CAqPlB,eAAA,CAAA;AG7PJ,2ECAA,CAAA,iBAYA,qBAGE,CAAA,KAGF,sBACE,CAAA,gBACA,CAAA,6BACA,CAAA,KAUF,QACE,CAAA,KAOF,aACE,CAAA,GAQF,aACE,CAAA,cACA,CAAA,GAWF,sBACE,CAAA,QACA,CAAA,gBACA,CAAA,IAQF,+BACE,CAAA,aACA,CAAA,EAUF,4BACE,CAAA,YAQF,kBACE,CAAA,yBACA,CAAA,wCAAA,CAAA,gCACA,CAAA,SAOF,kBAEE,CAAA,cAQF,+BAGE,CAAA,aACA,CAAA,MAOF,aACE,CAAA,QAQF,aAEE,CAAA,aACA,CAAA,iBACA,CAAA,uBACA,CAAA,IAGF,aACE,CAAA,IAGF,SACE,CAAA,IAUF,iBACE,CAAA,sCAWF,mBAKE,CAAA,cACA,CAAA,gBACA,CAAA,QACA,CAAA,aAQF,gBAEE,CAAA,cAQF,mBAEE,CAAA,gDAOF,yBAIE,CAAA,wHAOF,iBAIE,CAAA,SACA,CAAA,4GAOF,6BAIE,CAAA,SAOF,0BACE,CAAA,OAUF,qBACE,CAAA,aACA,CAAA,aACA,CAAA,cACA,CAAA,SACA,CAAA,kBACA,CAAA,SAOF,uBACE,CAAA,SAOF,aACE,CAAA,6BAQF,qBAEE,CAAA,SACA,CAAA,kFAOF,WAEE,CAAA,cAQF,4BACE,CAAA,mBACA,CAAA,yCAOF,uBACE,CAAA,6BAQF,yBACE,CAAA,YACA,CAAA,QAUF,aACE,CAAA,QAOF,iBACE,CAWA,kBAOF,YACE,CAAA,KCpWF,8HCcE,CAAA,iBDVF,2BECE,CAAA,kBAGA,CAAA,kBACA,CAAA,mBACA,CAAA,mBAIA,CAAA,oBACA,CAAA,yBAEA,CAAA,4BACA,CAAA,sCACA,CADA,8BACA,CAAA,kBAEA,CAAA,kBCmCA,aACE,CAAA,YACA,CAAA,kBCLI,CAAA,cClBY,CAAA,mBACF,CAAA,eFyBd,CAAA,aGvCe,CAAA,4BC2NX,kBJzLN,kBAAA,CAAA,cErBkB,CAAA,wBDyBV,CAAA,CCxBQ,aE6MV,kBJzLN,cEtBc,CAAA,gBAAA,CFsBd,UEpBgB,CAAA,CCmBO,iBHCvB,aACE,CAAA,YACA,CAAA,kBCLI,CAAA,gBClBY,CAAA,wBACF,CAAA,eFyBd,CAAA,aGvCe,CAAA,4BC2NX,iBJzLN,kBAAA,CAAA,iBErBkB,CAAA,wBDyBV,CAAA,CCxBQ,aE6MV,iBJzLN,cEtBc,CAAA,gBAAA,CFsBd,UEpBgB,CAAA,CCmBO,iBHCvB,aACE,CAAA,YACA,CAAA,kBCLI,CAAA,kBClBY,CAAA,wBACF,CAAA,eFyBd,CAAA,aGvCe,CAAA,4BC2NX,iBJzLN,kBAAA,CAAA,gBErBkB,CAAA,gBDyBV,CAAA,CCxBQ,aE6MV,iBJzLN,cEtBc,CAAA,gBAAA,CFsBd,UEpBgB,CAAA,CCmBO,iBHCvB,aACE,CAAA,YACA,CAAA,kBCLI,CAAA,cClBY,CAAA,gBACF,CAAA,eFyBd,CAAA,aGvCe,CAAA,4BC2NX,iBJzLN,kBAAA,CAAA,mBErBkB,CAAA,wBDyBV,CAAA,CCxBQ,aE6MV,iBJzLN,cEtBc,CAAA,gBAAA,CFsBd,UEpBgB,CAAA,CCmBO,kBHoBvB,aACE,CAAA,iBACA,CAAA,kBE1CgB,CAAA,wBACF,CAAA,aCPW,CAAA,4BCoNrB,kBJtKN,mBExCkB,CAAA,wBACF,CAAA,CAAA,aE6MV,kBJtKN,cEzCc,CAAA,gBAEE,CAAA,CAAA,iBFuChB,aACE,CAAA,iBACA,CAAA,kBE1CgB,CAAA,wBACF,CAAA,aCPW,CAAA,4BCoNrB,iBJtKN,eAAA,CAAA,gBExCkB,CAAA,gBF6CZ,CAAA,CE5CU,aE6MV,iBJtKN,cEzCc,CAAA,gBAEE,CAAA,CAAA,iBFuChB,aACE,CAAA,eACA,CAAA,cE1CgB,CAAA,gBACF,CAAA,aCPW,CAAA,4BCoNrB,iBJtKN,mBExCkB,CAAA,wBACF,CAAA,CAAA,aE6MV,iBJtKN,cEzCc,CAAA,gBAEE,CAAA,CAAA,cF0DhB,YACE,CAAA,kBC1CI,CAAA,kBClBY,CAAA,wBACF,CAAA,aCdC,CAAA,4BC2NX,cJnJN,kBAAA,CAAA,gBE3DkB,CAAA,gBDyBV,CAAA,CCxBQ,aE6MV,cJnJN,cE5Dc,CAAA,gBAAA,CF4Dd,UE1DgB,CAAA,CCmBO,0BHuCvB,YACE,CAAA,kBC1CI,CAAA,cClBY,CAAA,gBACF,CAAA,aCdC,CAAA,4BC2NX,0BJnJN,kBAAA,CAAA,mBE3DkB,CAAA,wBDyBV,CAAA,CCxBQ,aE6MV,0BJnJN,cE5Dc,CAAA,gBAAA,CF4Dd,UE1DgB,CAAA,CCmBO,cHuCvB,YACE,CAAA,kBC1CI,CAAA,iBClBY,CAAA,wBACF,CAAA,aCdC,CAAA,4BC2NX,cJnJN,kBAAA,CAAA,cE3DkB,CAAA,gBDyBV,CAAA,CCxBQ,aE6MV,cJnJN,cE5Dc,CAAA,eAAA,CF4Dd,UE1DgB,CAAA,CCmBO,eHuCvB,YACE,CAAA,kBC1CI,CAAA,gBClBY,CAAA,gBACF,CAAA,aCdC,CAAA,4BC2NX,eJnJN,kBAAA,CAAA,iBE3DkB,CAAA,wBDyBV,CAAA,CCxBQ,aE6MV,eJnJN,cE5Dc,CAAA,eAAA,CF4Dd,UE1DgB,CAAA,CCmBO,+BH4DzB,eACE,CAAA,4BI6HM,+BJ9HR,gBAGI,CAAA,CAAA,wHAIJ,gBCrEQ,CAAA,4BG4LA,wHJvHR,gBC9DU,CAAA,CAAA,gPDoEV,eAME,CAAA,4BI2GM,gPJjHR,gBAQI,CAAA,CAAA,iBKxIJ,eCwGmB,CAAA,gBCvFjB,CAAA,iBACA,CAAA,4BH+NM,iBCjPR,gBC6He,CAAA,iBAAA,CAAA,CAAA,yBFoHP,iBCjPR,gBE6BI,CAAA,iBACA,CAAA,CAAA,gBC9BJ,kBAEE,CAAA,iBACA,CAAA,sBCMA,UACE,CAAA,aACA,CAAA,UACA,CAAA,+BDLF,qBEsBA,CAAA,UAEE,CAAA,cAEF,CAAA,4BNgNM,+BI1ON,SE4BE,CAAA,UAP2C,CAAA,CAAA,6BFrB7C,qBEsBA,CAAA,UAEE,CAAA,cAEF,CAAA,4BNgNM,6BI1ON,cE4BE,CAAA,UAP2C,CAAA,CAAA,4BFrB7C,qBEsBA,CAAA,UAEE,CAAA,cAEF,CAAA,4BNgNM,4BI1ON,SE4BE,CAAA,UAP2C,CAAA,CAAA,8BFrB7C,qBEsBA,CAAA,UAEE,CAAA,cAEF,CAAA,4BNgNM,8BI1ON,cE4BE,CAAA,UAP2C,CAAA,CAAA,kCFrB7C,qBEsBA,CAAA,UAEE,CAAA,cAEF,CAAA,4BNgNM,kCI1ON,SE4BE,CAAA,UAP2C,CAAA,CAAA,wBFrB7C,qBEsBA,CAAA,UAEE,CAAA,cAEF,CAAA,4BNgNM,wBI1ON,UE4BE,CAAA,UAP2C,CAAA,CAAA,uCFf7C,qBEgBA,CAAA,cAIA,CAAA,4BNgNM,uCIpON,SEsBE,CAAA,UAP2C,CAAA,CAAA,qCFf7C,qBEgBA,CAAA,cAIA,CAAA,4BNgNM,qCIpON,cEsBE,CAAA,UAP2C,CAAA,CAAA,oCFf7C,qBEgBA,CAAA,cAIA,CAAA,4BNgNM,oCIpON,SEsBE,CAAA,UAP2C,CAAA,CAAA,sCFf7C,qBEgBA,CAAA,cAIA,CAAA,4BNgNM,sCIpON,cEsBE,CAAA,UAP2C,CAAA,CAAA,0CFf7C,qBEgBA,CAAA,cAIA,CAAA,4BNgNM,0CIpON,SEsBE,CAAA,UAP2C,CAAA,CAAA,gCFf7C,qBEgBA,CAAA,cAIA,CAAA,4BNgNM,gCIpON,UEsBE,CAAA,UAP2C,CAAA,CAAA,kBC5B/C,kBVqDQ,CAAA,wBQ5CN,UACE,CAAA,aACA,CAAA,UACA,CAAA,4BLqOI,kBOjPR,kBV4DU,CAAA,CUvDN,6GAGF,eAEE,CAAA,yBAIJ,iBACE,CAAA,6BACA,CAAA,2CAEA,cAEE,CAAA,aACA,CAAA,iBCVF,aT8GiB,CAAA,oBS3GjB,aTkHyB,CAAA,kBS/GzB,aTsHuB,CAAA,mBSnHvB,aT0HwB,CApED,kBUnEvB,6BCCA,CAAA,aXkEuB,CAAA,qBATL,CAAA,oCWtDlB,CAAA,oBACA,CAAA,sGFuBA,aTN2B,CAPV,6LSgCjB,aG3CA,CZWiB,YAAA,cDaC,CAAA,gBACF,CAAA,Ya7BhB,CAAA,kBd8CM,CAAA,cc5CN,CAAA,oBAEA,CAAA,aXsOM,YWjPR,UZuDyB,CAAA,CAAA,4BC0LjB,YWjPR,mBbmCoB,CAAA,wBACF,CAAA,CAAA,aE6MV,YWjPR,cbkCgB,CAAA,gBAEE,CAAA,CAAA,4BE6MV,YWjPR,kBd4DU,CAAA,CAAA,wBc9CR,eACE,CAAA,eAIJ,iBAGE,CAAA,oBAOF,iBACE,CAAA,oBACA,CAAA,oBAGF,iBACE,CAAA,uBACA,CAAA,8CAGF,eAIE,CAAA,4BXsMM,8CW1MR,iBAMI,CAAA,CAAA,cClCJ,iBACE,CAAA,oBACA,CAAA,iBVgJgC,CAAA,4BU7IhC,CAAA,gBACA,CAAA,UAEA,CAAA,cdgBkB,CAAA,gBACF,CAAA,UcjCQ,CAAA,wBAHM,CAAA,0BA2B9B,CAAA,iBAEA,CAAA,kBACA,CAAA,cACA,CAAA,uBAEA,CAAA,4BZgNM,cYtOR,UAAA,CAAA,mBdwBoB,CAAA,wBcdhB,CAAA,Cdec,aE6MV,cYtOR,cduBgB,CAAA,gBAEE,CAAA,CAAA,kFAAA,UcjCQ,CAAA,oBAsCtB,CAAA,qBAGF,OViHgC,CAAA,gCU3GhC,SACE,CAAA,QACA,CAAA,oBAGF,wBAtDyB,CAAA,oBA0DzB,iBbMkB,CAAA,6BaJhB,CAAA,+BAEA,CAAA,qBAOF,UACE,CAAA,aACA,CAAA,iBACA,CAAA,QAEA,CAAA,UACA,CAAA,WACA,CAAA,SACA,CAAA,sBACA,CAAA,4BAaF,QACE,CAAA,gBC7FJ,WACE,CAAA,SACA,ChBmDM,egBpCN,CAAA,UAEA,CAAA,4Bb8NM,gBajPR,kBhB4DU,CAAA,CgBnDN,uGAGF,eAEE,CAAA,aCdJ,aACE,CAAA,iBACA,CAAA,chBiCkB,CAAA,gBACF,CAAA,aCdC,CAAA,4BC2NX,acjPR,mBhBmCoB,CAAA,wBACF,CAAA,CAAA,aE6MV,acjPR,chBkCgB,CAAA,gBAAA,CgBlChB,UhBoCkB,CAAA,CiBjChB,oCAGF,oBLUE,CAAA,kEACA,WACE,CAAA,oBACA","file":"main.c0e66084.chunk.css","sourcesContent":["body {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}\r\n","@import 'styles/base';\r\n\r\n$legco-input-height: 40px;\r\n\r\n.legco-input {\r\n  display: block;\r\n  width: 100%;\r\n\r\n  border: $legco-border-width-form-element solid $legco-input-border-color;\r\n  border-radius: 0;\r\n  @include legco-responsive-padding(1, \"all\");\r\n  @include legco-responsive-typography(19);\r\n\r\n  appearance: none;\r\n\r\n  &:focus {\r\n    outline: $legco-focus-width solid $legco-focus-color;\r\n    // Ensure outline appears outside of the element\r\n    outline-offset: 0;\r\n    box-shadow: inset 0 0 0 $legco-border-width-form-element;\r\n  }\r\n}","/// Responsive spacing\r\n///\r\n/// Adds responsive spacing (either padding or margin)\r\n/// by fetching a spacing map from the responsive spacing scale, which defines\r\n/// spacing values at different breakpoints.\r\n///\r\n/// Used in `legco-responsive-margin` or `legco-responsive-padding` mixins\r\n///\r\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\r\n///   scale, corresponds to a map of breakpoints and spacing values\r\n/// @param {String} $property - Property to add spacing to (e.g. `margin`)\r\n/// @param {String} $direction [all] - Direction to add spacing to\r\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\r\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\r\n///\r\n/// @access private\r\n\r\n@mixin _legco-responsive-spacing(\r\n  $responsive-spacing-point, \r\n  $property, \r\n  $direction: \"all\", \r\n  $important: false, \r\n  $adjustment: false) {\r\n\r\n  $actual-input-type: type-of($responsive-spacing-point);\r\n  @if $actual-input-type != \"number\" {\r\n    @error \"Expected an integer, but got a #{$actual-input-type}.\";\r\n  }\r\n\r\n  @if not map-has-key($legco-spacing-responsive-scale, $responsive-spacing-point) {\r\n    @error \"Unknown spacing point: `#{$responsive-spacing-point}`. Make sure you are using a point from the \"\r\n    + \"responsive spacing scale.\";\r\n  }\r\n\r\n  // Make sure the value `$responsive-spacing-point` corresponds to is a map\r\n  $scale-map: map-get($legco-spacing-responsive-scale, $responsive-spacing-point);\r\n  $actual-map-type: type-of($scale-map);\r\n  @if $actual-map-type != \"map\" {\r\n    @error \"Expected a map, but got a #{$actual-map-type}. Make sure you are using a map to set the \"\r\n    + \"responsive spacing.\";\r\n  }\r\n\r\n  // Loop through each breakpoint in the map\r\n  @each $breakpoint, $breakpoint-value in $scale-map {\r\n    @if ($adjustment) {\r\n      $breakpoint-value: $breakpoint-value + $adjustment;\r\n    }\r\n\r\n    // The `null` breakpoint is for mobile\r\n    @if $breakpoint == null {\r\n      @if $direction == all {\r\n        #{$property}: $breakpoint-value if($important, !important, null);\r\n      } @else {\r\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\r\n      }\r\n    } @else {\r\n      @include legco-media-query($from: $breakpoint) {\r\n        @if $direction == all {\r\n          #{$property}: $breakpoint-value if($important, !important, null);\r\n        } @else {\r\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/// Responsive margin\r\n///\r\n/// Adds responsive margin by fetching a \"spacing map\" from the responsive\r\n/// spacing scale, which defines different spacing values at different\r\n/// breakpoints. Wrapper for the `_legco-responsive-spacing` mixin.\r\n///\r\n/// @see {mixin} _legco-responsive-spacing\r\n///\r\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\r\n///   scale, corresponds to a map of breakpoints and spacing values\r\n/// @param {String} $direction [all] - Direction to add spacing to\r\n///   (`top`, `right`, `bottom`, `left`, `all`)\r\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\r\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\r\n///\r\n/// @example scss\r\n///   .element {\r\n///     @include legco-responsive-margin(6, \"left\", $adjustment, 1px);\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-responsive-margin($responsive-spacing-point, $direction: \"all\", $important: false, $adjustment: false) {\r\n  @include _legco-responsive-spacing($responsive-spacing-point, \"margin\", $direction, $important, $adjustment);\r\n}\r\n\r\n/// Responsive padding\r\n///\r\n/// Adds responsive adding by fetching a \"spacing map\" from the responsive\r\n/// spacing scale, which defines different spacing values at different\r\n/// breakpoints. Wrapper for the `_legco-responsive-spacing` mixin.\r\n///\r\n/// @see {mixin} _legco-responsive-spacing\r\n///\r\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\r\n///   scale, corresponds to a map of breakpoints and spacing values\r\n/// @param {String} $direction [all] - Direction to add spacing to\r\n///   (`top`, `right`, `bottom`, `left`, `all`)\r\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\r\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\r\n///\r\n/// @example scss\r\n///   .element {\r\n///     @include legco-responsive-padding(6, \"left\", $adjustment, 1px);\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-responsive-padding($responsive-spacing-point, $direction: \"all\", $important: false, $adjustment: false) {\r\n  @include _legco-responsive-spacing($responsive-spacing-point, \"padding\", $direction, $important, $adjustment);\r\n}\r\n","/// Responsive typography helper\r\n///\r\n/// Takes a font map to create font size and line height declaration for\r\n/// different breakpoints, and for print.\r\n///\r\n/// Example font map\r\n///\r\n/// $my-font-map: (\r\n///   null: (\r\n///     font-size: 16px,\r\n///     line-height: 20px\r\n///   ),\r\n///   tablet: (\r\n///     font-size: 19px,\r\n///     line-height: 25px\r\n///   ),\r\n///   print: (\r\n///     font-size: 14pt,\r\n///     line-height: 1.15\r\n///   )\r\n/// );\r\n///\r\n/// @param {Map} $font-map - Font map\r\n///\r\n/// @access public\r\n\r\n@mixin legco-responsive-typography($size) {\r\n  @if not map-has-key($legco-typography-scale, $size) {\r\n    @error \"Unknown font size: `#{$size}`. Expected a point from the responsive typography scale.\";\r\n  }\r\n\r\n  $font-map: map-get($legco-typography-scale, $size);\r\n\r\n  @each $breakpoint, $breakpoint-map in $font-map {\r\n    $font-size: map-get($breakpoint-map, \"font-size\");\r\n    $font-size-rem: legco-px-to-rem($font-size);\r\n    $line-height: _legco-convert-line-height(\r\n      map-get($breakpoint-map, \"line-height\"),\r\n      $font-size\r\n    );\r\n\r\n    @if $breakpoint == null {\r\n      @if $legco-typography-use-rem {\r\n        font-size: $font-size-rem;\r\n      } @else {\r\n        font-size: $font-size;\r\n      }\r\n      line-height: $line-height;\r\n    } @else if $breakpoint == \"print\" {\r\n      @include legco-media-query($media-type: print) {\r\n        font-size: $font-size;\r\n        line-height: $line-height;\r\n      }\r\n    } @else {\r\n      @include legco-media-query($from: $breakpoint) {\r\n        @if $legco-typography-use-rem {\r\n          font-size: $font-size-rem;\r\n        } @else {\r\n          font-size: $font-size;\r\n        }\r\n        line-height: $line-height;  \r\n      }\r\n    }\r\n  }\r\n}\r\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n///\n/// Do not override this value, or things will break\n///\n/// @link https://github.com/sass-mq/sass-mq/issues/122\n/// @deprecated This setting will be removed in sass-mq v6.0.0\n/// @access private\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (such as the layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   $mq-show-breakpoints: (mobile, tablet, desktop);\n///   @import 'path/to/mq';\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if ($mq-base-font-size != 16px) {\n        @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if ($base-font-size != 16px) {\n        @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $until [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$mq-media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$mq-breakpoints]\n/// @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","@import 'styles/base';\r\n\r\n// Styling for the text search\r\n//\r\n// We place the input widget under the label [1] to make\r\n// the label looks like a placeholder; when the input\r\n// widget gets focus, or when the user has enter a\r\n// search term, we lift the input widget up [2] so that\r\n// the label is hidden from the user; To ensure the\r\n// input is interactive, we lift the entire candidate\r\n// search component up [3]. \r\n\r\n$search-input-font-scale: 24;\r\n$search-input-border-width: 1px;\r\n$search-input-height: 40px;\r\n$large-search-input-height: 50px;\r\n$search-icon-size: 20px;\r\n$large-search-icon-size: 24px;\r\n\r\n.search-box {\r\n  // Create a new stacking context\r\n  position: relative;\r\n  margin-bottom: legco-get-space(2);\r\n  z-index: 1;\r\n\r\n  @include legco-clearfix;\r\n}\r\n\r\n.search-box__input {\r\n  // `z-index` only works on elements with relative,\r\n  // absolute, or fixed positioning\r\n  position: relative;\r\n  float: left;\r\n  display: block;\r\n  padding: legco-get-space(2) 0.5rem;\r\n  border: none;\r\n  width: calc(100% - #{$search-input-height});\r\n  height: $search-input-height;\r\n  // Since default background is transparent we have\r\n  // to explicitly set one\r\n  background-color: legco-get-color(\"white\");\r\n  z-index: -1; // [1]\r\n  @include legco-responsive-typography(\r\n    $search-input-font-scale\r\n  );\r\n\r\n  @include legco-media-query($from: tablet) {\r\n    width: calc(100% - #{$large-search-input-height});\r\n    height: $large-search-input-height;\r\n  }\r\n\r\n  &:focus {\r\n    // Cancel default box shadow\r\n    box-shadow: none;\r\n  }\r\n}\r\n\r\n.search-box__input:focus,\r\n.search-box__input--filled {\r\n  z-index: 1; // [2]\r\n}\r\n\r\n.search-box .search-box__label {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  // Remove default margin\r\n  margin: 0;\r\n  padding-top: legco-get-space(2);\r\n  padding-left: 1em;\r\n\r\n  @include legco-responsive-typography(\r\n    $search-input-font-scale\r\n  );\r\n\r\n  color: $legco-secondary-text-color;\r\n\r\n  user-select: none;\r\n  pointer-events: none;\r\n}\r\n\r\n.search-box__button {\r\n  float: left;\r\n  display: block;\r\n  border: none;\r\n  border-radius: 0;\r\n  width: $search-input-height;\r\n  height: $search-input-height;\r\n  background-color: legco-get-color(\"black\");\r\n  background-image: url(\"/assets/search.svg\");\r\n  background-size: $search-icon-size;\r\n  background-position: center center;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n  &:focus {\r\n    outline: $legco-focus-width solid $legco-focus-color;\r\n    box-shadow: inset 0 0 0 1px $legco-focus-color;\r\n  }\r\n  @include legco-media-query($from: tablet) {\r\n    width: $large-search-input-height;\r\n    height: $large-search-input-height;\r\n    background-size: $large-search-icon-size;\r\n  }\r\n}\r\n","////\r\n/// @group helpers/layout\r\n////\r\n\r\n/// Clear floated content within a container using a pseudo element\r\n///\r\n/// @access public\r\n\r\n@mixin legco-clearfix {\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n}\r\n","/// Responsive typography helper\r\n///\r\n/// Takes a font map to create font size and line height declaration for\r\n/// different breakpoints, and for print.\r\n///\r\n/// Example font map\r\n///\r\n/// $my-font-map: (\r\n///   null: (\r\n///     font-size: 16px,\r\n///     line-height: 20px\r\n///   ),\r\n///   tablet: (\r\n///     font-size: 19px,\r\n///     line-height: 25px\r\n///   ),\r\n///   print: (\r\n///     font-size: 14pt,\r\n///     line-height: 1.15\r\n///   )\r\n/// );\r\n///\r\n/// @param {Map} $font-map - Font map\r\n///\r\n/// @access public\r\n\r\n@mixin legco-responsive-typography($size) {\r\n  @if not map-has-key($legco-typography-scale, $size) {\r\n    @error \"Unknown font size: `#{$size}`. Expected a point from the responsive typography scale.\";\r\n  }\r\n\r\n  $font-map: map-get($legco-typography-scale, $size);\r\n\r\n  @each $breakpoint, $breakpoint-map in $font-map {\r\n    $font-size: map-get($breakpoint-map, \"font-size\");\r\n    $font-size-rem: legco-px-to-rem($font-size);\r\n    $line-height: _legco-convert-line-height(\r\n      map-get($breakpoint-map, \"line-height\"),\r\n      $font-size\r\n    );\r\n\r\n    @if $breakpoint == null {\r\n      @if $legco-typography-use-rem {\r\n        font-size: $font-size-rem;\r\n      } @else {\r\n        font-size: $font-size;\r\n      }\r\n      line-height: $line-height;\r\n    } @else if $breakpoint == \"print\" {\r\n      @include legco-media-query($media-type: print) {\r\n        font-size: $font-size;\r\n        line-height: $line-height;\r\n      }\r\n    } @else {\r\n      @include legco-media-query($from: $breakpoint) {\r\n        @if $legco-typography-use-rem {\r\n          font-size: $font-size-rem;\r\n        } @else {\r\n          font-size: $font-size;\r\n        }\r\n        line-height: $line-height;  \r\n      }\r\n    }\r\n  }\r\n}\r\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n///\n/// Do not override this value, or things will break\n///\n/// @link https://github.com/sass-mq/sass-mq/issues/122\n/// @deprecated This setting will be removed in sass-mq v6.0.0\n/// @access private\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (such as the layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   $mq-show-breakpoints: (mobile, tablet, desktop);\n///   @import 'path/to/mq';\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if ($mq-base-font-size != 16px) {\n        @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if ($base-font-size != 16px) {\n        @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $until [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$mq-media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$mq-breakpoints]\n/// @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","////\r\n/// @group settings/colors\r\n////\r\n\r\n@import '../helpers/colors';\r\n\r\n// =================================================================\r\n// Generic\r\n// =================================================================\r\n\r\n/// Brand color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-brand-color: legco-get-color(\"blue\") !default;\r\n\r\n/// Text color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-text-color: legco-get-color(\"black\") !default;\r\n\r\n/// Secondary text color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-secondary-text-color: legco-get-color(\"dark-grey\") !default;\r\n\r\n/// Body background color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-body-background-color: legco-get-color(\"white\") !default;\r\n\r\n/// Canvas background color\r\n///\r\n/// Used by the footer component to give the illusion of a long\r\n/// footer.\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-canvas-background-color: legco-get-color(\"light-grey\") !default;\r\n\r\n/// Text color for print media\r\n///\r\n/// Use \"true black\" to avoid printers using color ink to print body text\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-print-text-color: #000000 !default;\r\n\r\n/// Focus color\r\n///\r\n/// Used for outline (and background, where appropriate) when interactive\r\n/// elements (e.g. links and form controls) get focus\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-focus-color: legco-get-color(\"yellow\") !default;\r\n\r\n/// Focused text color\r\n///\r\n/// Ensure that text has sufficient contrast between itself and background\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-focus-text-color: legco-get-color(\"black\") !default;\r\n\r\n/// Error color\r\n///\r\n/// Used to highlight error messages and form controls in an error state\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-error-color: legco-get-color(\"red\") !default;\r\n\r\n/// Border color\r\n///\r\n/// Used for borders, separators, rules, keylines, etc.\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-border-color: legco-get-color(\"mid-grey\");\r\n\r\n/// Input border color\r\n///\r\n/// Used for form controls\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-input-border-color: legco-get-color(\"black\") !default;\r\n\r\n/// Input hover color\r\n///\r\n/// Used for hover states on form controls\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-hover-color: legco-get-color(\"mid-grey\") !default;\r\n\r\n// =================================================================\r\n// Links colors\r\n// =================================================================\r\n\r\n/// Link color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-color: legco-get-color(\"blue\") !default;\r\n\r\n/// Visited link color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-visited-color: legco-get-color(\"purple\") !default;\r\n\r\n/// Link hover color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-hover-color: legco-get-color(\"dark-blue\") !default;\r\n\r\n/// Active link color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-active-color: legco-get-color(\"black\") !default;\r\n","@import 'styles/base';\r\n\r\n// Get line height of a font scale at a specified breakpoint\r\n@function legco-get-line-height($font-scale, $from) {\r\n  $responsive-font-map: map-get($legco-typography-scale, $font-scale);\r\n  $font-map: map-get($responsive-font-map, $from);\r\n  $line-height: map-get($font-map, \"line-height\");\r\n\r\n  @return $line-height;\r\n}\r\n\r\n// Scale of the checkbox label\r\n$legco-font-scale: 19;\r\n// Height of the container\r\n$legco-container-height: 40px;\r\n$legco-touch-target-size: 44px;\r\n// Size of the checkbox widget\r\n$legco-checkbox-size: 40px;\r\n\r\n.legco-checkbox {\r\n  position: relative;\r\n  margin-bottom: legco-get-space(2);\r\n\r\n  // Create space for the the checkbox widget\r\n  padding-left: $legco-checkbox-size;\r\n\r\n  height: $legco-container-height;\r\n\r\n  // Font size and line height\r\n  @include legco-responsive-typography($legco-font-scale);\r\n\r\n  color: $legco-text-color;\r\n  @include legco-media-query($media-type: print) {\r\n    color: $legco-print-text-color;\r\n  }\r\n\r\n  &:last-child,\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.legco-checkbox__input {\r\n  // Since touch target is slightly larger than the checkbox widget,\r\n  // we need to offset the difference.\r\n  $input-offset: ($legco-touch-target-size - $legco-checkbox-size) / 2;\r\n\r\n  // Hide the native checkbox\r\n  opacity: 0;\r\n\r\n  position: absolute;\r\n  top: - $input-offset;\r\n  left: - $input-offset;\r\n\r\n  margin: 0;\r\n\r\n  width: $legco-touch-target-size;\r\n  height: $legco-touch-target-size;\r\n\r\n  cursor: pointer;\r\n\r\n  // Move touch target on the top of the stacking context to\r\n  // show focus state correctly.\r\n  z-index: 1;\r\n}\r\n\r\n.legco-checkbox__label {\r\n  $line-height: legco-get-line-height($legco-font-scale, null);\r\n  $padding-top-bottom: ($legco-container-height - $line-height) / 2;\r\n\r\n  // We don't want the label to span the entire container, thus\r\n  // we make it float to shrink the size.\r\n  float: left;\r\n\r\n  // Center the label vertically\r\n  padding-top: $padding-top-bottom;\r\n  padding-bottom: $padding-top-bottom;\r\n\r\n  // Since line height responds to device size, we need to re-calculate\r\n  // top and bottom paddings.\r\n  @include legco-media-query($from: tablet) {\r\n    $line-height: legco-get-line-height($legco-font-scale, tablet);\r\n    $padding-top-bottom: ($legco-container-height - $line-height) / 2;\r\n\r\n    padding-top: $padding-top-bottom;\r\n    padding-bottom: $padding-top-bottom;  \r\n  }\r\n\r\n  padding-left: legco-get-space(3);\r\n  padding-right: legco-get-space(3);\r\n\r\n  cursor: pointer;\r\n  // remove 300ms pause on mobile\r\n  touch-action: manipulation;\r\n}\r\n\r\n// 🔲 Checkbox widget\r\n.legco-checkbox__label::before {\r\n  content: \"\";\r\n\r\n  position: absolute;\r\n  top: ($legco-container-height - $legco-checkbox-size) / 2;\r\n  left: 0;\r\n\r\n  width: $legco-checkbox-size;\r\n  height: $legco-checkbox-size;\r\n  border: $legco-border-width-form-element solid currentColor;\r\n  background: transparent;\r\n}\r\n\r\n// ✔ Check mark\r\n//\r\n// The check mark is a box with a border on the left and bottom side (|____)\r\n// rotated 45 degrees\r\n.legco-checkbox__label::after {\r\n  $checkmark-width: 18px;\r\n  $checkmark-height: 7px;\r\n  $checkmark-border-width: $legco-border-width;\r\n  $checkmark-box-width: $checkmark-width + $checkmark-border-width;\r\n  $checkmark-box-height: $checkmark-height * 2 + $checkmark-border-width;\r\n\r\n  box-sizing: content-box;\r\n  content: \"\";\r\n\r\n  // Align check mark with the checkbox widget\r\n  //\r\n  // Check mark has a full width of `$legco-checkmark-width + $legco-border-width` and\r\n  // a full height of `$legco-checkmark-height + $legco-border-width`.\r\n  //\r\n  // We want the long edge to go through the center of the checkbox widget, so we multiply\r\n  // the height by 2 to offset the effects of short edge on vertical position.\r\n  position: absolute;\r\n  top: ($legco-container-height - $checkmark-box-height) / 2;\r\n  left: ($legco-checkbox-size - $checkmark-box-width) / 2;\r\n\r\n  width: $checkmark-width;\r\n  height: $checkmark-height;\r\n\r\n  transform: rotate(-45deg);\r\n  border: solid;\r\n  border-width: 0 0 $checkmark-border-width $checkmark-border-width;\r\n\r\n  // Fix bug in IE11 caused by transform rotate (-45deg).\r\n  border-top-color: transparent;\r\n\r\n  // Checkbox is unchecked by default\r\n  opacity: 0;\r\n\r\n  background: transparent;\r\n}\r\n\r\n// Focused state\r\n.legco-checkbox__input:focus + .legco-checkbox__label::before {\r\n  border-width: 4px;\r\n  box-shadow: 0 0 0 $legco-focus-width $legco-focus-color;\r\n}\r\n\r\n// Selected state\r\n.legco-checkbox__input:checked + .legco-checkbox__label::after {\r\n  // Show checkmark when the checkbox is selected\r\n  opacity: 1;\r\n}\r\n\r\n// Small checkbox\r\n.legco-checkbox--small {\r\n  // Size of the small checkbox widget\r\n  $legco-checkbox-size: 24px;\r\n\r\n  margin-bottom: legco-get-space(1);\r\n  // Make space for the checkbox widget\r\n  padding-left: $legco-checkbox-size;\r\n  @include legco-clearfix;\r\n\r\n  .legco-checkbox__input {\r\n    // Input has absolute positioning, and is hidden.\r\n    $input-offset: ($legco-touch-target-size - $legco-checkbox-size) / 2;\r\n    // We shift the input into the left margin so that the visible edge of the\r\n    // input and the checkbox widget is aligned.\r\n    left: - $input-offset;\r\n  }\r\n\r\n  .legco-checkbox__label {\r\n    // Touch area offset\r\n    $input-offset: ($legco-touch-target-size - $legco-checkbox-size) / 2;\r\n    // Create space for the touch target visual feedback.\r\n    //\r\n    // Should there be no left padding, the label would touch the right\r\n    // edge of the checkbox widget.\r\n    padding-left: $input-offset;\r\n  }\r\n\r\n  // 🔲 Checkbox widget\r\n  .legco-checkbox__label::before {\r\n    // Since the checkbox size has changed, we need to re-caculate the\r\n    // top offset.\r\n    top: ($legco-container-height - $legco-checkbox-size) / 2;\r\n    width: $legco-checkbox-size;\r\n    height: $legco-checkbox-size;\r\n  }\r\n\r\n  // ✔ Check mark\r\n  .legco-checkbox__label::after {\r\n    $checkmark-width: 9px;\r\n    $checkmark-height: 3.5px;\r\n    $checkmark-border-width: 3px;\r\n    $checkmark-box-width: $checkmark-width + $checkmark-border-width;\r\n    $checkmark-box-height: $checkmark-height * 2 + $checkmark-border-width;\r\n\r\n    top: ($legco-container-height - $checkmark-box-height) / 2;\r\n    left: ($legco-checkbox-size - $checkmark-box-width) / 2;\r\n\r\n    width: $checkmark-width;\r\n    height: $checkmark-height;\r\n\r\n    border-width: 0 0 $checkmark-border-width $checkmark-border-width;\r\n  }\r\n\r\n  &:hover {\r\n    // Show a grey background when the checkbox is hovered over.\r\n    //\r\n    // We do this because the touch target is much larger than the visible\r\n    // checkbox widget, so we need to provide feedback to the user as to\r\n    // which checkbox they will select when their cursor is outside of the\r\n    // the visible area.\r\n    .legco-checkbox__input:not(:disabled) +\r\n    .legco-checkbox__label::before {\r\n      box-shadow: 0 0 0 $legco-hover-width $legco-hover-color;\r\n    }\r\n\r\n    // Since we've overriden the box shadow provided by the focus state, we\r\n    // need to refine that too.\r\n    //\r\n    // We need two box shadows to 1. restore the original focus state and\r\n    // 2. indicate the hover state.\r\n    .legco-checkbox__input:focus +\r\n    .legco-checkbox__label::before {\r\n      box-shadow: \r\n        0 0 0 $legco-focus-width $legco-focus-color, // 1\r\n        0 0 0 $legco-hover-width $legco-hover-color; // 2\r\n    }\r\n  }\r\n\r\n  // For devices that can't hover (e.g. touch devices), don't\r\n  // provide a hover state. Since we set the hover state \r\n  // before, We need to manually undo it.\r\n  @media (hover: none), (pointer: coarse) {\r\n    &:hover {\r\n      .legco-checkbox__input:not(:disabled) +\r\n      .legco-checkbox__label::before {\r\n        box-shadow: initial;\r\n      }\r\n  \r\n      .legco-checkbox__input:focus +\r\n      .legco-checkbox__label::before {\r\n        box-shadow: 0 0 0 $legco-focus-width $legco-focus-color;\r\n      }\r\n    }  \r\n  }\r\n}","////\r\n/// @group settings/colors\r\n////\r\n\r\n@import '../helpers/colors';\r\n\r\n// =================================================================\r\n// Generic\r\n// =================================================================\r\n\r\n/// Brand color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-brand-color: legco-get-color(\"blue\") !default;\r\n\r\n/// Text color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-text-color: legco-get-color(\"black\") !default;\r\n\r\n/// Secondary text color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-secondary-text-color: legco-get-color(\"dark-grey\") !default;\r\n\r\n/// Body background color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-body-background-color: legco-get-color(\"white\") !default;\r\n\r\n/// Canvas background color\r\n///\r\n/// Used by the footer component to give the illusion of a long\r\n/// footer.\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-canvas-background-color: legco-get-color(\"light-grey\") !default;\r\n\r\n/// Text color for print media\r\n///\r\n/// Use \"true black\" to avoid printers using color ink to print body text\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-print-text-color: #000000 !default;\r\n\r\n/// Focus color\r\n///\r\n/// Used for outline (and background, where appropriate) when interactive\r\n/// elements (e.g. links and form controls) get focus\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-focus-color: legco-get-color(\"yellow\") !default;\r\n\r\n/// Focused text color\r\n///\r\n/// Ensure that text has sufficient contrast between itself and background\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-focus-text-color: legco-get-color(\"black\") !default;\r\n\r\n/// Error color\r\n///\r\n/// Used to highlight error messages and form controls in an error state\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-error-color: legco-get-color(\"red\") !default;\r\n\r\n/// Border color\r\n///\r\n/// Used for borders, separators, rules, keylines, etc.\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-border-color: legco-get-color(\"mid-grey\");\r\n\r\n/// Input border color\r\n///\r\n/// Used for form controls\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-input-border-color: legco-get-color(\"black\") !default;\r\n\r\n/// Input hover color\r\n///\r\n/// Used for hover states on form controls\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-hover-color: legco-get-color(\"mid-grey\") !default;\r\n\r\n// =================================================================\r\n// Links colors\r\n// =================================================================\r\n\r\n/// Link color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-color: legco-get-color(\"blue\") !default;\r\n\r\n/// Visited link color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-visited-color: legco-get-color(\"purple\") !default;\r\n\r\n/// Link hover color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-hover-color: legco-get-color(\"dark-blue\") !default;\r\n\r\n/// Active link color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-active-color: legco-get-color(\"black\") !default;\r\n","////\r\n/// @group helpers/layout\r\n////\r\n\r\n/// Clear floated content within a container using a pseudo element\r\n///\r\n/// @access public\r\n\r\n@mixin legco-clearfix {\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n}\r\n","@import 'styles/base';\r\n\r\n// Get line height of a font scale at a specified breakpoint\r\n@function legco-get-line-height($font-scale, $from) {\r\n  $responsive-font-map: map-get($legco-typography-scale, $font-scale);\r\n  $font-map: map-get($responsive-font-map, $from);\r\n  $line-height: map-get($font-map, \"line-height\");\r\n\r\n  @return $line-height;\r\n}\r\n\r\n// Scale of the radio label\r\n$legco-font-scale: 19;\r\n// Height of the container\r\n$legco-container-height: 40px;\r\n$legco-touch-target-size: 44px;\r\n// Size of the radio widget\r\n$legco-radio-size: 40px;\r\n\r\n.legco-radio {\r\n  position: relative;\r\n  margin-bottom: legco-get-space(2);\r\n\r\n  // Create space for the the radio widget\r\n  padding-left: $legco-radio-size;\r\n\r\n  height: $legco-container-height;\r\n\r\n  // Font size and line height\r\n  @include legco-responsive-typography($legco-font-scale);\r\n\r\n  color: $legco-text-color;\r\n  @include legco-media-query($media-type: print) {\r\n    color: $legco-print-text-color;\r\n  }\r\n\r\n  &:last-child,\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.legco-radio__input {\r\n  // Since touch target is slightly larger than the radio widget,\r\n  // we need to offset the difference.\r\n  $input-offset: ($legco-touch-target-size - $legco-radio-size) / 2;\r\n\r\n  // Hide the native radio widget\r\n  opacity: 0;\r\n\r\n  position: absolute;\r\n  top: - $input-offset;\r\n  left: - $input-offset;\r\n\r\n  margin: 0;\r\n\r\n  width: $legco-touch-target-size;\r\n  height: $legco-touch-target-size;\r\n\r\n  cursor: pointer;\r\n\r\n  // Move touch target on the top of the stacking context to\r\n  // show focus state correctly.\r\n  z-index: 1;\r\n}\r\n\r\n.legco-radio__label {\r\n  $line-height: legco-get-line-height($legco-font-scale, null);\r\n  $padding-top-bottom: ($legco-container-height - $line-height) / 2;\r\n\r\n  // We don't want the label to span the entire container, thus\r\n  // we make it float to shrink the size.\r\n  float: left;\r\n\r\n  // Center the label vertically\r\n  padding-top: $padding-top-bottom;\r\n  padding-bottom: $padding-top-bottom;\r\n\r\n  // Since line height responds to device size change, we need to re-calculate\r\n  // top and bottom paddings.\r\n  @include legco-media-query($from: tablet) {\r\n    $line-height: legco-get-line-height($legco-font-scale, tablet);\r\n    $padding-top-bottom: ($legco-container-height - $line-height) / 2;\r\n\r\n    padding-top: $padding-top-bottom;\r\n    padding-bottom: $padding-top-bottom;  \r\n  }\r\n\r\n  padding-left: legco-get-space(3);\r\n  padding-right: legco-get-space(3);\r\n\r\n  cursor: pointer;\r\n  // remove 300ms pause on mobile\r\n  touch-action: manipulation;\r\n}\r\n\r\n// 🔘 Radio widget\r\n.legco-radio__label::before {\r\n  content: \"\";\r\n\r\n  position: absolute;\r\n  top: ($legco-container-height - $legco-radio-size) / 2;\r\n  left: 0;\r\n\r\n  width: $legco-radio-size;\r\n  height: $legco-radio-size;\r\n  border: $legco-border-width-form-element solid currentColor;\r\n  border-radius: 50%;\r\n  background: transparent;\r\n}\r\n\r\n// • Filling for selected radio\r\n.legco-radio__label::after {\r\n  $radio-filling-border-width: legco-get-space(2);\r\n  $radio-filling-box-size: $radio-filling-border-width * 2;\r\n\r\n  box-sizing: content-box;\r\n  content: \"\";\r\n\r\n  // Align filling with the radio widget\r\n  position: absolute;\r\n  top: ($legco-container-height - $radio-filling-box-size) / 2;\r\n  left: ($legco-radio-size - $radio-filling-box-size) / 2;\r\n\r\n  width: 0;\r\n  height: 0;\r\n\r\n  border: $radio-filling-border-width solid currentColor;\r\n  border-radius: 50%;\r\n\r\n  // Radio is not selected by default\r\n  opacity: 0;\r\n\r\n  background: transparent;\r\n}\r\n\r\n// Focused state\r\n.legco-radio__input:focus + .legco-radio__label::before {\r\n  border-width: 4px;\r\n  box-shadow: 0 0 0 $legco-focus-width $legco-focus-color;\r\n}\r\n\r\n// Selected state\r\n.legco-radio__input:checked + .legco-radio__label::after {\r\n  // Show the filling when the radio is selected\r\n  opacity: 1;\r\n}\r\n\r\n// Small radio\r\n.legco-radio--small {\r\n  // Size of the small radio widget\r\n  $legco-radio-size: 24px;\r\n\r\n  margin-bottom: legco-get-space(1);\r\n  // Make space for the radio widget\r\n  padding-left: $legco-radio-size;\r\n  @include legco-clearfix;\r\n\r\n  .legco-radio__input {\r\n    // Input has absolute positioning, and is hidden.\r\n    $input-offset: ($legco-touch-target-size - $legco-radio-size) / 2;\r\n    // We shift the input into the left margin so that the visible edge of the\r\n    // input and the radio widget is aligned.\r\n    left: - $input-offset;\r\n  }\r\n\r\n  .legco-radio__label {\r\n    // Touch area offset\r\n    $input-offset: ($legco-touch-target-size - $legco-radio-size) / 2;\r\n    // Create space for the touch target visual feedback.\r\n    //\r\n    // Should there be no left padding, the label would touch the right\r\n    // edge of the radio widget.\r\n    padding-left: $input-offset;\r\n  }\r\n\r\n  // 🔘 Radio widget\r\n  .legco-radio__label::before {\r\n    // Since the radio size has changed, we need to re-caculate the\r\n    // top offset.\r\n    top: ($legco-container-height - $legco-radio-size) / 2;\r\n    width: $legco-radio-size;\r\n    height: $legco-radio-size;\r\n  }\r\n\r\n  // • Filling for selected radio\r\n  .legco-radio__label::after {\r\n    $radio-filling-border-width: 5px;\r\n    $radio-filling-box-size: $radio-filling-border-width * 2;\r\n  \r\n    top: ($legco-container-height - $radio-filling-box-size) / 2;\r\n    left: ($legco-radio-size - $radio-filling-box-size) / 2;\r\n  \r\n    border: $radio-filling-border-width solid currentColor;\r\n  }\r\n\r\n  &:hover {\r\n    // Show a grey background when the radio is hovered over.\r\n    //\r\n    // We do this because the touch target is much larger than the visible\r\n    // radio widget, so we need to provide feedback to the user as to\r\n    // which radio they will select when their cursor is outside of the\r\n    // the visible area.\r\n    .legco-radio__input:not(:disabled) +\r\n    .legco-radio__label::before {\r\n      box-shadow: 0 0 0 $legco-hover-width $legco-hover-color;\r\n    }\r\n\r\n    // Since we've overriden the box shadow provided by the focus state, we\r\n    // need to refine that too.\r\n    //\r\n    // We need two box shadows to 1. restore the original focus state and\r\n    // 2. indicate the hover state.\r\n    .legco-radio__input:focus +\r\n    .legco-radio__label::before {\r\n      box-shadow: \r\n        0 0 0 $legco-focus-width $legco-focus-color, // 1\r\n        0 0 0 $legco-hover-width $legco-hover-color; // 2\r\n    }\r\n  }\r\n\r\n  // For devices that can't hover (e.g. touch devices), don't\r\n  // provide a hover state. Since we set the hover state \r\n  // before, We need to manually undo it.\r\n  @media (hover: none), (pointer: coarse) {\r\n    &:hover {\r\n      .legco-radio__input:not(:disabled) +\r\n      .legco-radio__label::before {\r\n        box-shadow: initial;\r\n      }\r\n  \r\n      .legco-radio__input:focus +\r\n      .legco-radio__label::before {\r\n        box-shadow: 0 0 0 $legco-focus-width $legco-focus-color;\r\n      }\r\n    }  \r\n  }\r\n}\r\n","@import 'styles/base';\r\n\r\n.legco-select {\r\n  display: block;\r\n\r\n  padding: legco-get-space(1);\r\n\r\n  width: 100%;\r\n\r\n  @include legco-responsive-typography(19);\r\n\r\n  border: $legco-border-width-form-element solid $legco-input-border-color;\r\n\r\n  &:focus {\r\n    outline: $legco-focus-width solid $legco-focus-color;\r\n    outline-offset: 0;\r\n\r\n    box-shadow: inset 0 0 0 $legco-border-width-form-element;\r\n  }\r\n}\r\n","@import 'styles/base';\r\n\r\n.filters-group {\r\n  margin-bottom: legco-get-space(6);\r\n\r\n  &:last-child,\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.filters-group__label {\r\n  font-weight: bold;\r\n}","@import 'styles/base';\r\n\r\n.selected-filters__group {\r\n  margin-bottom: legco-get-space(3);\r\n\r\n  &:last-child,\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.selected-filters--active {\r\n  @include legco-responsive-margin(9, \"bottom\");\r\n}\r\n\r\n// Label in front of a group of tags\r\n.selected-filters__label {\r\n  // Label takes up a its own row on mobile devices\r\n  display: block;\r\n\r\n  margin-bottom: legco-get-space(2);\r\n\r\n  font-weight: bold;\r\n\r\n  @include legco-responsive-typography(19);\r\n\r\n  @include legco-media-query($from: tablet) {\r\n    // Starting from tablet, label and tags may stay in the same row.\r\n    display: inline-block;\r\n\r\n    // Add space between the tabel and the first tag\r\n    margin-right: legco-get-space(2);\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n// A filter tag consists of a button and an optional prepositioned text. The text\r\n// may serve a divider between adjacent tags.\r\n.filter-tag {\r\n  $filter-tag-top-bottom-margin: legco-get-space(2);\r\n\r\n  display: inline-block;\r\n\r\n  // Add space between adjacent tags, and between stacked row of tags.\r\n  margin-right: legco-get-space(2);\r\n  margin-bottom: $filter-tag-top-bottom-margin;\r\n\r\n  @include legco-responsive-typography(19);\r\n\r\n  &:last-child,\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n}\r\n\r\n.filter-tag__cross-sign {\r\n  padding-right: legco-get-space(1);\r\n}\r\n\r\n// The filter tag buttons have different appearances based on the device\r\n// type. On mobile, the border is thick and background set to white,\r\n// while on tablet the border is thinner and background features a light\r\n// grey color.\r\n\r\n// On focus state, the combined width of border and box shadow should be\r\n// 3 pixels, regardless of the border width. Therefore, the box shadow\r\n// width is adjusted accordingly.\r\n.filter-tag__button {\r\n  padding: legco-get-space(2);\r\n\r\n  border: 2px solid currentColor;\r\n  border-radius: 5px;\r\n\r\n  background: legco-get-color(\"white\");\r\n\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: $legco-focus-width solid $legco-focus-color;\r\n    box-shadow: inset 0 0 0 1px currentColor;\r\n  }\r\n\r\n  @include legco-media-query($from: tablet) {\r\n    border: 1px solid legco-get-color(\"dark-grey\");\r\n    background: legco-get-color(\"light-grey\");\r\n\r\n    &:focus {\r\n      // Align the border color with the box shadow color so that the border\r\n      // becomes visually thicker, presenting a \"focused\" state.\r\n      border-color: currentColor;\r\n      box-shadow: inset 0 0 0 2px currentColor;\r\n    }\r\n  }\r\n}\r\n","/// Responsive spacing\r\n///\r\n/// Adds responsive spacing (either padding or margin)\r\n/// by fetching a spacing map from the responsive spacing scale, which defines\r\n/// spacing values at different breakpoints.\r\n///\r\n/// Used in `legco-responsive-margin` or `legco-responsive-padding` mixins\r\n///\r\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\r\n///   scale, corresponds to a map of breakpoints and spacing values\r\n/// @param {String} $property - Property to add spacing to (e.g. `margin`)\r\n/// @param {String} $direction [all] - Direction to add spacing to\r\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\r\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\r\n///\r\n/// @access private\r\n\r\n@mixin _legco-responsive-spacing(\r\n  $responsive-spacing-point, \r\n  $property, \r\n  $direction: \"all\", \r\n  $important: false, \r\n  $adjustment: false) {\r\n\r\n  $actual-input-type: type-of($responsive-spacing-point);\r\n  @if $actual-input-type != \"number\" {\r\n    @error \"Expected an integer, but got a #{$actual-input-type}.\";\r\n  }\r\n\r\n  @if not map-has-key($legco-spacing-responsive-scale, $responsive-spacing-point) {\r\n    @error \"Unknown spacing point: `#{$responsive-spacing-point}`. Make sure you are using a point from the \"\r\n    + \"responsive spacing scale.\";\r\n  }\r\n\r\n  // Make sure the value `$responsive-spacing-point` corresponds to is a map\r\n  $scale-map: map-get($legco-spacing-responsive-scale, $responsive-spacing-point);\r\n  $actual-map-type: type-of($scale-map);\r\n  @if $actual-map-type != \"map\" {\r\n    @error \"Expected a map, but got a #{$actual-map-type}. Make sure you are using a map to set the \"\r\n    + \"responsive spacing.\";\r\n  }\r\n\r\n  // Loop through each breakpoint in the map\r\n  @each $breakpoint, $breakpoint-value in $scale-map {\r\n    @if ($adjustment) {\r\n      $breakpoint-value: $breakpoint-value + $adjustment;\r\n    }\r\n\r\n    // The `null` breakpoint is for mobile\r\n    @if $breakpoint == null {\r\n      @if $direction == all {\r\n        #{$property}: $breakpoint-value if($important, !important, null);\r\n      } @else {\r\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\r\n      }\r\n    } @else {\r\n      @include legco-media-query($from: $breakpoint) {\r\n        @if $direction == all {\r\n          #{$property}: $breakpoint-value if($important, !important, null);\r\n        } @else {\r\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/// Responsive margin\r\n///\r\n/// Adds responsive margin by fetching a \"spacing map\" from the responsive\r\n/// spacing scale, which defines different spacing values at different\r\n/// breakpoints. Wrapper for the `_legco-responsive-spacing` mixin.\r\n///\r\n/// @see {mixin} _legco-responsive-spacing\r\n///\r\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\r\n///   scale, corresponds to a map of breakpoints and spacing values\r\n/// @param {String} $direction [all] - Direction to add spacing to\r\n///   (`top`, `right`, `bottom`, `left`, `all`)\r\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\r\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\r\n///\r\n/// @example scss\r\n///   .element {\r\n///     @include legco-responsive-margin(6, \"left\", $adjustment, 1px);\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-responsive-margin($responsive-spacing-point, $direction: \"all\", $important: false, $adjustment: false) {\r\n  @include _legco-responsive-spacing($responsive-spacing-point, \"margin\", $direction, $important, $adjustment);\r\n}\r\n\r\n/// Responsive padding\r\n///\r\n/// Adds responsive adding by fetching a \"spacing map\" from the responsive\r\n/// spacing scale, which defines different spacing values at different\r\n/// breakpoints. Wrapper for the `_legco-responsive-spacing` mixin.\r\n///\r\n/// @see {mixin} _legco-responsive-spacing\r\n///\r\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\r\n///   scale, corresponds to a map of breakpoints and spacing values\r\n/// @param {String} $direction [all] - Direction to add spacing to\r\n///   (`top`, `right`, `bottom`, `left`, `all`)\r\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\r\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\r\n///\r\n/// @example scss\r\n///   .element {\r\n///     @include legco-responsive-padding(6, \"left\", $adjustment, 1px);\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-responsive-padding($responsive-spacing-point, $direction: \"all\", $important: false, $adjustment: false) {\r\n  @include _legco-responsive-spacing($responsive-spacing-point, \"padding\", $direction, $important, $adjustment);\r\n}\r\n","@import 'styles/base';\r\n\r\n$candidate-card-header-size: 24;\r\n$candidate-card-header-colors: \"yellow\", \"red\", \"dark-grey\", \"green\";\r\n\r\n$candidate-card-name-size: 24;\r\n$candidate-card-caption-size: 19;\r\n\r\n.candidate-card__header {\r\n  $candidate-card-color-bar-width: 2px;\r\n\r\n  @include legco-responsive-typography(\r\n    $candidate-card-header-size\r\n  );\r\n\r\n  position: relative;\r\n  margin-bottom: legco-get-space(2);\r\n  // Make way for the color bar and create space between it\r\n  // and the text\r\n  padding-left: $candidate-card-color-bar-width + legco-get-space(2);\r\n\r\n  font-weight: bold;\r\n  &::before {\r\n    display: block;\r\n    position: absolute;\r\n    // Make the color bar span full header height\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    content: \"\";\r\n    width: $candidate-card-color-bar-width;\r\n  }\r\n\r\n  @include legco-media-query($from: tablet) {\r\n    $candidate-card-color-bar-width: 3px;\r\n    padding-left: $candidate-card-color-bar-width + legco-get-space(3);\r\n    &::before {\r\n      width: $candidate-card-color-bar-width;\r\n    }\r\n  }\r\n}\r\n\r\n@each $color in $candidate-card-header-colors {\r\n  // Color setting for each color bar\r\n  .candidate-card__header--#{$color}::before {\r\n    background-color: legco-get-color($color);\r\n  }\r\n}\r\n\r\n.candidate-card__link {\r\n  display: inline-block;\r\n  margin-top: 0;\r\n  margin-bottom: legco-get-space(1);\r\n  @include legco-media-query($media-type: print) {\r\n    $font-family: $legco-font-family-print;\r\n  }\r\n  @include legco-link-style-default;\r\n  &:focus {\r\n    @include legco-focused-text;\r\n  }\r\n}\r\n\r\n.candidate-card__name {\r\n  // Undo default margins on the heading\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  @include legco-responsive-typography(\r\n    $candidate-card-name-size\r\n  );\r\n  font-weight: normal;\r\n}\r\n\r\n.candidate-card__caption {\r\n  @include legco-responsive-typography(\r\n    $candidate-card-caption-size\r\n  );\r\n  color: $legco-secondary-text-color;\r\n}","/// Link styles\r\n/// Provides the default link styles for normal, visited, hover, and active states.\r\n///\r\n/// @example scss\r\n///   .legco-component__link {\r\n///     @include legco-link-style;\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-link-style-default {\r\n  &:link {\r\n    color: $legco-link-color;\r\n  }\r\n  &:visited {\r\n    color: $legco-link-visited-color;\r\n  }\r\n  &:hover {\r\n    color: $legco-link-hover-color;\r\n  }\r\n  &:active {\r\n    color: $legco-link-active-color;\r\n  }\r\n  &:focus {\r\n    color: $legco-focus-text-color;\r\n  }\r\n}\r\n\r\n/// Muted link styles\r\n///\r\n/// Used for secondary links, which appear in muted colors regardless of visited states.\r\n///\r\n/// @access public\r\n\r\n@mixin legco-link-style-muted {\r\n  &:link,\r\n  &:visited,\r\n  &:hover,\r\n  &:active {\r\n    color: $legco-secondary-text-color;\r\n  }\r\n\r\n  &:focus {\r\n    color: $legco-focus-text-color;\r\n  }\r\n}\r\n\r\n/// Links that look like text\r\n///\r\n/// Used by navigation components, such as breadscrumbs and the back list.\r\n///\r\n/// @access public\r\n\r\n@mixin legco-link-style-text {\r\n  &:link,\r\n  &:visited,\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: $legco-text-color;\r\n  }\r\n}\r\n","/// Focused text\r\n///\r\n/// Provides an outline to clearly show when the target element is focused.\r\n/// Used for interactive text-based elements.\r\n///\r\n/// @access public\r\n\r\n@mixin legco-focused-text {\r\n  outline: $legco-focus-width solid transparent;\r\n  color: $legco-focus-text-color;\r\n  background-color: $legco-focus-color;\r\n  box-shadow: 0 -2px $legco-focus-color, 0 4px $legco-focus-text-color;\r\n  text-decoration: none;\r\n}\r\n\r\n@mixin legco-delimited-text($delimiter: '') {\r\n  display: inline-block;\r\n  &:not(:first-of-type):not(:first-child)::before {\r\n    content: \"#{$delimiter}\";\r\n    display: inline-block;\r\n  }\r\n}\r\n","/// Generate facet styles\r\n///\r\n/// Facet is a flat surface on an object. Here we use the term to\r\n/// refer to a container with fixed positioning that span the\r\n/// entire view port.\r\n\r\n%legco-facet-wrapper {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background: legco-get-color(\"white\");\r\n\r\n  overflow-y: auto;\r\n\r\n  z-index: 1000;\r\n}\r\n\r\n%legco-facet-footer {\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n\r\n  border-top: 1px solid legco-get-color(\"mid-grey\");\r\n\r\n  width: 100%;\r\n\r\n  background-color: legco-get-color(\"white\");\r\n  box-shadow: 0 0 5px rgba(177,180,182,0.8);\r\n}\r\n","@import 'styles/base';\r\n\r\n$app-title-font-scale: 36;\r\n$app-subtitle-font-scale: 24;\r\n\r\n$app-constituency-name-font-scale: 27;\r\n$app-constituency-type-font-scale: 19;\r\n\r\n$filters-panel-width: 375px;\r\n\r\n// Get height of the show results button, which consists of:\r\n// [1] Vertical paddings\r\n// [2] Line height\r\n$filters-panel-show-results-btn-height: (\r\n  legco-get-space(2) // [1]\r\n  + get-typography-property(19, \"line-height\", tablet) * 2 // [2]\r\n);\r\n$filters-panel-footer-top-margin: legco-get-space(2);\r\n$filters-panel-footer-vertical-padding: legco-get-space(3);\r\n$filters-panel-footer-height: (\r\n  $filters-panel-show-results-btn-height\r\n  + $filters-panel-footer-vertical-padding * 2\r\n);\r\n\r\n$search-input-font-scale: 27;\r\n\r\n%link-button {\r\n  display: inline-block;\r\n  // Remove default button styles\r\n  margin: 0;\r\n  padding: 0;\r\n  border-width: 0;\r\n  background: none;\r\n  cursor: pointer;\r\n  -webkit-appearance: none;\r\n\r\n  // Font size and line height\r\n  @include legco-responsive-typography(19);\r\n\r\n  color: $legco-link-color;\r\n  @include legco-media-query($media-type: print) {\r\n    color: $legco-print-text-color;\r\n  }\r\n\r\n  &:hover {\r\n    color: $legco-link-hover-color;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  // For devices that can't hover (e.g. cell phones),\r\n  // remove hover state as it can get stuck in that state.\r\n  @media (hover: none) {\r\n    &:hover {\r\n      color: $legco-link-color;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  &:focus {\r\n    @include legco-focused-text;\r\n  }\r\n\r\n  &:hover:not(:focus) {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  // Remove default button focus outline in Firefox\r\n  &::-moz-focus-inner {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n// When filters panel is present, disable scrolling by setting a\r\n// fixed height and hidding overflowing content.\r\n.home-page--filters-panel-on {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.home-page__header {\r\n  @include legco-responsive-padding(3, \"top\");\r\n  @include legco-responsive-padding(3, \"bottom\");\r\n  border-bottom: $legco-border-width-wide solid legco-get-color(\"yellow\");\r\n  background-color: legco-get-color(\"black\");\r\n  color: legco-get-color(\"white\");\r\n}\r\n\r\n.app-title {\r\n  margin: 0;\r\n  @include legco-responsive-typography(\r\n    $app-title-font-scale\r\n  );\r\n}\r\n\r\n.app-subtitle {\r\n  display: block;\r\n  margin-bottom: legco-get-space(1);\r\n  @include legco-responsive-typography(\r\n    $app-subtitle-font-scale\r\n  );\r\n}\r\n\r\n.candidates__section {\r\n  @include legco-responsive-margin(9, \"bottom\");\r\n}\r\n\r\n.candidates__list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n\r\n.candidates__item {\r\n  padding-right: $legco-gutter;\r\n  @include legco-responsive-margin(8, \"bottom\");\r\n\r\n  width: 50%;\r\n  @include legco-media-query($from: tablet) {\r\n    width: calc(100% / 3);\r\n  }\r\n}\r\n\r\n.candidates__header {\r\n  @include legco-responsive-margin(8, \"bottom\");\r\n}\r\n\r\n.candidates__constituency-name {\r\n  display: inline-block;\r\n  margin: 0;\r\n  @include legco-responsive-typography(\r\n    $app-constituency-name-font-scale\r\n  );\r\n}\r\n\r\n.candidates__constituency-type {\r\n  display: inline-block;\r\n  margin-left: legco-get-space(1);\r\n  @include legco-responsive-typography(\r\n    $app-constituency-type-font-scale\r\n  );\r\n}\r\n\r\n// Styling for the finder\r\n\r\n.candidate-finder {\r\n  @include legco-responsive-margin(5, \"bottom\");\r\n  @include legco-responsive-padding(8, \"top\");\r\n  @include legco-responsive-padding(6, \"bottom\");\r\n  background-color: $legco-brand-color;\r\n}\r\n\r\n.candidate-finder__show-filters-btn {\r\n  @extend %link-button;\r\n  // Color the text white for better contrast as the background is blue\r\n  color: legco-get-color(\"white\");\r\n  text-decoration: underline;\r\n  &:hover:not(:focus) {\r\n    // Override hover color so the text remains white\r\n    color: legco-get-color(\"white\");\r\n  }\r\n}\r\n\r\n.filters-panel {\r\n  display: none;\r\n  @extend %legco-facet-wrapper;\r\n  &.filters-panel--active {\r\n    display: block;\r\n  }\r\n\r\n  @include legco-media-query($from: tablet) {\r\n    // On larger screens, filters panel has a fixed width. We add\r\n    // paddings because the container spacing mechanism doesn't\r\n    // work here.\r\n    padding-left: $legco-gutter / 2;\r\n    padding-right: $legco-gutter / 2;\r\n    width: $filters-panel-width;\r\n\r\n    // Add a layer on top of main content so it appears the\r\n    // content is dimmed\r\n    &::before {\r\n      position: fixed;\r\n      content: \"\";\r\n      top: 0;\r\n      left: 0;\r\n      right: $filters-panel-width;\r\n      bottom: 0;\r\n      background-color: rgba(0,0,0,0.6);\r\n      z-index: 1;\r\n    }\r\n\r\n    .filters-panel__show-results-btn {\r\n      display: block;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      width: 200px;\r\n    }  \r\n  }\r\n}\r\n\r\n.filters-panel__header {\r\n  @include legco-width-container;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  padding-top: legco-get-space(4);\r\n  padding-bottom: legco-get-space(6);\r\n}\r\n\r\n.filters-panel__title {\r\n  margin: 0;\r\n}\r\n\r\n.filters-panel__go-back-btn {\r\n  @extend %link-button;\r\n}\r\n\r\n.filters-panel__body {\r\n  @include legco-width-container;\r\n\r\n  padding-bottom: (\r\n    $filters-panel-footer-height\r\n    + $filters-panel-footer-top-margin\r\n  );\r\n\r\n  @include legco-media-query($from: tablet) {\r\n    $filters-panel-show-results-btn-height: (\r\n      legco-get-space(2)\r\n      + get-typography-property(19, \"line-height\", tablet) * 2\r\n    );\r\n    $filters-panel-footer-height: (\r\n      $filters-panel-show-results-btn-height\r\n      + $filters-panel-footer-vertical-padding * 2\r\n    );\r\n    padding-bottom: (\r\n      $filters-panel-footer-height\r\n      + $filters-panel-footer-top-margin\r\n    );\r\n  }\r\n}\r\n\r\n.filters-panel__footer {\r\n  @extend %legco-facet-footer;\r\n  padding-top: $filters-panel-footer-vertical-padding;\r\n  padding-bottom: $filters-panel-footer-vertical-padding;\r\n  @include legco-media-query($from: tablet) {\r\n    border-top: none;\r\n    width: $filters-panel-width;\r\n    box-shadow: none;\r\n  }\r\n}\r\n","////\r\n/// @group settings/measurements\r\n////\r\n\r\n// =================================================================\r\n// Media query breakpoints\r\n// =================================================================\r\n\r\n/// Breakpoint definitions\r\n///\r\n/// @type Map\r\n/// @access public\r\n\r\n$legco-breakpoints: (\r\n  mobile: 320px,\r\n  tablet: 641px,\r\n  desktop: 769px\r\n) !default;\r\n\r\n// =================================================================\r\n// Spacing\r\n// =================================================================\r\n\r\n/// Single point spacing variables. Access using `legco-get-space()`.\r\n///\r\n/// @type Map\r\n/// @access private\r\n\r\n$legco-spacing-points: (\r\n  0: 0,\r\n  1: 5px,\r\n  2: 10px,\r\n  3: 15px,\r\n  4: 20px,\r\n  5: 25px,\r\n  6: 30px,\r\n  7: 40px,\r\n  8: 50px,\r\n  9: 60px\r\n) !default;\r\n\r\n/// Responsive spacing map\r\n///\r\n/// Used for generating responsive spacing that adapts\r\n/// according to the media query breakpoints.\r\n///\r\n/// Access responsive spacing with `legco-responsive-margin` or\r\n/// `legco-responsive-padding` mixins.\r\n///\r\n/// @type Map\r\n/// @access private\r\n\r\n$legco-spacing-responsive-scale: (\r\n  0: (\r\n    null: 0,\r\n    tablet: 0\r\n  ),\r\n  1: (\r\n    null: 5px,\r\n    tablet: 5px\r\n  ),\r\n  2: (\r\n    null: 10px,\r\n    tablet: 10px\r\n  ),\r\n  3: (\r\n    null: 15px,\r\n    tablet: 15px\r\n  ),\r\n  4: (\r\n    null: 15px,\r\n    tablet: 20px\r\n  ),\r\n  5: (\r\n    null: 15px,\r\n    tablet: 25px\r\n  ),\r\n  6: (\r\n    null: 20px,\r\n    tablet: 30px\r\n  ),\r\n  7: (\r\n    null: 25px,\r\n    tablet: 40px\r\n  ),\r\n  8: (\r\n    null: 30px,\r\n    tablet: 50px\r\n  ),\r\n  9: (\r\n    null: 40px,\r\n    tablet: 60px\r\n  )\r\n) !default;\r\n\r\n// =================================================================\r\n// Page layout\r\n// =================================================================\r\n\r\n/// Width of main container\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-page-width: 960px !default;\r\n\r\n/// Map of grid column widths\r\n///\r\n/// @type Map\r\n/// @access public\r\n\r\n$legco-grid-widths: (\r\n  one-quarter: 25%,\r\n  one-third: 33.3333%,\r\n  one-half: 50%,\r\n  two-thirds: 66.6666%,\r\n  three-quarters: 75%,\r\n  full: 100%\r\n) !default;\r\n\r\n/// Width of gutter between grid columns\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-gutter: 30px !default;\r\n\r\n// =================================================================\r\n// Borders\r\n// =================================================================\r\n\r\n/// Standard border width\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width: 5px !default;\r\n\r\n/// Wide border width\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width-wide: 10px !default;\r\n\r\n/// Narrow border width\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width-narrow: 4px !default;\r\n\r\n/// Form control border width\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width-form-element: 2px !default;\r\n\r\n/// Form control border width when in error state\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width-form-element-error: 4px !default;\r\n\r\n/// Form group border width when in error state\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width-form-group-error: $legco-border-width !default;\r\n\r\n/// Border width of focus outline\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-focus-width: 3px !default;\r\n\r\n/// Hover width for form controls with a hover state\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-hover-width: 10px !default;\r\n","/// Width container mixin\r\n///\r\n/// Used to create page width and custom width container classes\r\n///\r\n/// @param {String} $width [$legco-page-width] - Width in pixels\r\n///\r\n/// @example scss - Creating a 1200px wide container class\r\n///   .app-width-container--wide {\r\n///     @include legco-width-container(1200px);\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-width-container($width: $legco-page-width) {\r\n  max-width: $width;\r\n\r\n  // On mobile, add half width gutters\r\n  margin-left: $legco-gutter / 2;\r\n  margin-right: $legco-gutter / 2;\r\n\r\n  // On tablet, add full width gutters\r\n  @include legco-media-query($from: tablet) {\r\n    margin-left: $legco-gutter;\r\n    margin-right: $legco-gutter;\r\n  }\r\n\r\n  // As soon as the viewport is greater than the container width plus the gutters, \r\n  // center the content instead of adding gutters\r\n  @include legco-media-query($and: \"(min-width: #{ $width + $legco-gutter * 2 })\") {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n}\r\n","/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */*,*::after,*::before{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}body{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Open Sans\",\"Helvetica Neue\",sans-serif}.visually-hidden{position:absolute !important;margin:0 !important;border:0 !important;padding:0 !important;width:1px !important;height:1px !important;overflow:hidden !important;clip:rect(0 0 0 0) !important;clip-path:inset(50%) !important;white-space:nowrap}.legco-heading-xl{display:block;margin-top:0;margin-bottom:30px;font-size:2rem;line-height:1.09375;font-weight:bold;color:#0b0c0c}@media(min-width: 40.0625em){.legco-heading-xl{margin-bottom:50px}}@media(min-width: 40.0625em){.legco-heading-xl{font-size:3rem;line-height:1.0416666667}}@media print{.legco-heading-xl{font-size:32pt;line-height:1.15}}@media print{.legco-heading-xl{color:#000}}.legco-heading-l{display:block;margin-top:0;margin-bottom:20px;font-size:1.5rem;line-height:1.0416666667;font-weight:bold;color:#0b0c0c}@media(min-width: 40.0625em){.legco-heading-l{margin-bottom:30px}}@media(min-width: 40.0625em){.legco-heading-l{font-size:2.25rem;line-height:1.1111111111}}@media print{.legco-heading-l{font-size:24pt;line-height:1.05}}@media print{.legco-heading-l{color:#000}}.legco-heading-m{display:block;margin-top:0;margin-bottom:15px;font-size:1.125rem;line-height:1.1111111111;font-weight:bold;color:#0b0c0c}@media(min-width: 40.0625em){.legco-heading-m{margin-bottom:20px}}@media(min-width: 40.0625em){.legco-heading-m{font-size:1.5rem;line-height:1.25}}@media print{.legco-heading-m{font-size:18pt;line-height:1.15}}@media print{.legco-heading-m{color:#000}}.legco-heading-s{display:block;margin-top:0;margin-bottom:15px;font-size:1rem;line-height:1.25;font-weight:bold;color:#0b0c0c}@media(min-width: 40.0625em){.legco-heading-s{margin-bottom:20px}}@media(min-width: 40.0625em){.legco-heading-s{font-size:1.1875rem;line-height:1.3157894737}}@media print{.legco-heading-s{font-size:14pt;line-height:1.15}}@media print{.legco-heading-s{color:#000}}.legco-caption-xl{display:block;margin-bottom:5px;font-size:1.125rem;line-height:1.1111111111;color:#626a6e}@media(min-width: 40.0625em){.legco-caption-xl{font-size:1.6875rem;line-height:1.1111111111}}@media print{.legco-caption-xl{font-size:18pt;line-height:1.15}}.legco-caption-l{display:block;margin-bottom:5px;font-size:1.125rem;line-height:1.1111111111;color:#626a6e}@media(min-width: 40.0625em){.legco-caption-l{margin-bottom:0}}@media(min-width: 40.0625em){.legco-caption-l{font-size:1.5rem;line-height:1.25}}@media print{.legco-caption-l{font-size:18pt;line-height:1.15}}.legco-caption-m{display:block;margin-bottom:0;font-size:1rem;line-height:1.25;color:#626a6e}@media(min-width: 40.0625em){.legco-caption-m{font-size:1.1875rem;line-height:1.3157894737}}@media print{.legco-caption-m{font-size:14pt;line-height:1.15}}.legco-body-l{margin-top:0;margin-bottom:20px;font-size:1.125rem;line-height:1.1111111111;color:#0b0c0c}@media(min-width: 40.0625em){.legco-body-l{margin-bottom:30px}}@media(min-width: 40.0625em){.legco-body-l{font-size:1.5rem;line-height:1.25}}@media print{.legco-body-l{font-size:18pt;line-height:1.15}}@media print{.legco-body-l{color:#000}}.legco-body-m,.legco-body{margin-top:0;margin-bottom:15px;font-size:1rem;line-height:1.25;color:#0b0c0c}@media(min-width: 40.0625em){.legco-body-m,.legco-body{margin-bottom:20px}}@media(min-width: 40.0625em){.legco-body-m,.legco-body{font-size:1.1875rem;line-height:1.3157894737}}@media print{.legco-body-m,.legco-body{font-size:14pt;line-height:1.15}}@media print{.legco-body-m,.legco-body{color:#000}}.legco-body-s{margin-top:0;margin-bottom:15px;font-size:.875rem;line-height:1.1428571429;color:#0b0c0c}@media(min-width: 40.0625em){.legco-body-s{margin-bottom:20px}}@media(min-width: 40.0625em){.legco-body-s{font-size:1rem;line-height:1.25}}@media print{.legco-body-s{font-size:14pt;line-height:1.2}}@media print{.legco-body-s{color:#000}}.legco-body-xs{margin-top:0;margin-bottom:15px;font-size:.75rem;line-height:1.25;color:#0b0c0c}@media(min-width: 40.0625em){.legco-body-xs{margin-bottom:20px}}@media(min-width: 40.0625em){.legco-body-xs{font-size:.875rem;line-height:1.4285714286}}@media print{.legco-body-xs{font-size:12pt;line-height:1.2}}@media print{.legco-body-xs{color:#000}}.legco-body-l+.legco-heading-l{padding-top:5px}@media(min-width: 40.0625em){.legco-body-l+.legco-heading-l{padding-top:10px}}.legco-body-m+.legco-heading-l,.legco-body+.legco-heading-l,.legco-body-s+.legco-heading-l,.legco-list+.legco-heading-l{padding-top:15px}@media(min-width: 40.0625em){.legco-body-m+.legco-heading-l,.legco-body+.legco-heading-l,.legco-body-s+.legco-heading-l,.legco-list+.legco-heading-l{padding-top:20px}}.legco-body-m+.legco-heading-m,.legco-body+.legco-heading-m,.legco-body-s+.legco-heading-m,.legco-list+.legco-heading-m,.legco-body-m+.legco-heading-s,.legco-body+.legco-heading-s,.legco-body-s+.legco-heading-s,.legco-list+.legco-heading-s{padding-top:5px}@media(min-width: 40.0625em){.legco-body-m+.legco-heading-m,.legco-body+.legco-heading-m,.legco-body-s+.legco-heading-m,.legco-list+.legco-heading-m,.legco-body-m+.legco-heading-s,.legco-body+.legco-heading-s,.legco-body-s+.legco-heading-s,.legco-list+.legco-heading-s{padding-top:10px}}.legco-container{max-width:960px;margin-left:15px;margin-right:15px}@media(min-width: 40.0625em){.legco-container{margin-left:30px;margin-right:30px}}@media(min-width: 1020px){.legco-container{margin-left:auto;margin-right:auto}}.legco-grid-row{margin-right:-15px;margin-left:-15px}.legco-grid-row:after{content:\"\";display:block;clear:both}.legco-grid-column-one-quarter{box-sizing:border-box;width:100%;padding:0 15px}@media(min-width: 40.0625em){.legco-grid-column-one-quarter{width:25%;float:left}}.legco-grid-column-one-third{box-sizing:border-box;width:100%;padding:0 15px}@media(min-width: 40.0625em){.legco-grid-column-one-third{width:33.3333%;float:left}}.legco-grid-column-one-half{box-sizing:border-box;width:100%;padding:0 15px}@media(min-width: 40.0625em){.legco-grid-column-one-half{width:50%;float:left}}.legco-grid-column-two-thirds{box-sizing:border-box;width:100%;padding:0 15px}@media(min-width: 40.0625em){.legco-grid-column-two-thirds{width:66.6666%;float:left}}.legco-grid-column-three-quarters{box-sizing:border-box;width:100%;padding:0 15px}@media(min-width: 40.0625em){.legco-grid-column-three-quarters{width:75%;float:left}}.legco-grid-column-full{box-sizing:border-box;width:100%;padding:0 15px}@media(min-width: 40.0625em){.legco-grid-column-full{width:100%;float:left}}.legco-grid-column-one-quarter-desktop{box-sizing:border-box;padding:0 15px}@media(min-width: 48.0625em){.legco-grid-column-one-quarter-desktop{width:25%;float:left}}.legco-grid-column-one-third-desktop{box-sizing:border-box;padding:0 15px}@media(min-width: 48.0625em){.legco-grid-column-one-third-desktop{width:33.3333%;float:left}}.legco-grid-column-one-half-desktop{box-sizing:border-box;padding:0 15px}@media(min-width: 48.0625em){.legco-grid-column-one-half-desktop{width:50%;float:left}}.legco-grid-column-two-thirds-desktop{box-sizing:border-box;padding:0 15px}@media(min-width: 48.0625em){.legco-grid-column-two-thirds-desktop{width:66.6666%;float:left}}.legco-grid-column-three-quarters-desktop{box-sizing:border-box;padding:0 15px}@media(min-width: 48.0625em){.legco-grid-column-three-quarters-desktop{width:75%;float:left}}.legco-grid-column-full-desktop{box-sizing:border-box;padding:0 15px}@media(min-width: 48.0625em){.legco-grid-column-full-desktop{width:100%;float:left}}.legco-form-group{margin-bottom:20px}.legco-form-group:after{content:\"\";display:block;clear:both}@media(min-width: 40.0625em){.legco-form-group{margin-bottom:30px}}.legco-form-group .legco-form-group:last-of-type{margin-bottom:0}.legco-form-group:last-child,.legco-form-group:last-of-type{margin-bottom:0}.legco-form-group--error{padding-left:15px;border-left:5px solid #d4351c}.legco-form-group--error .legco-form-group{padding-left:0;border-left:0}.legco-link:link{color:#1d70b8}.legco-link:visited{color:#4c2c92}.legco-link:hover{color:#003078}.legco-link:active{color:#0b0c0c}.legco-link:focus{color:#0b0c0c}.legco-link:focus{outline:3px solid transparent;color:#0b0c0c;background-color:#fd0;box-shadow:0 -2px #fd0,0 4px #0b0c0c;text-decoration:none}.legco-link--muted:link,.legco-link--muted:visited,.legco-link--muted:hover,.legco-link--muted:active{color:#626a6e}.legco-link--muted:focus{color:#0b0c0c}.legco-link--text-color:link,.legco-link--text-color:visited,.legco-link--text-color:hover,.legco-link--text-color:active,.legco-link--text-color:focus{color:#0b0c0c}.legco-list{color:#0b0c0c;font-size:1rem;line-height:1.25;margin-top:0;margin-bottom:15px;padding-left:0;list-style-type:none}@media print{.legco-list{color:#000}}@media(min-width: 40.0625em){.legco-list{font-size:1.1875rem;line-height:1.3157894737}}@media print{.legco-list{font-size:14pt;line-height:1.15}}@media(min-width: 40.0625em){.legco-list{margin-bottom:20px}}.legco-list .legco-list{margin-top:10px}.legco-list>li{margin-bottom:5px}.legco-list--bullet{padding-left:20px;list-style-type:disc}.legco-list--number{padding-left:20px;list-style-type:decimal}.legco-list--bullet>li,.legco-list--number>li{margin-bottom:0}@media(min-width: 40.0625em){.legco-list--bullet>li,.legco-list--number>li{margin-bottom:5px}}.legco-button{position:relative;display:inline-block;margin-bottom:2px;border:2px solid transparent;padding:9px 10px;width:100%;font-size:1rem;line-height:1.25;color:#fff;background-color:#00703c;box-shadow:0 2px 0 #002d18;text-align:center;vertical-align:top;cursor:pointer;-webkit-appearance:none}@media(min-width: 40.0625em){.legco-button{width:auto}}@media(min-width: 40.0625em){.legco-button{font-size:1.1875rem;line-height:1.3157894737}}@media print{.legco-button{font-size:14pt;line-height:1.15}}.legco-button:link,.legco-button:visited,.legco-button:active,.legco-button:hover{color:#fff;text-decoration:none}.legco-button:active{top:2px}.legco-button::-moz-focus-inner{padding:0;border:0}.legco-button:hover{background-color:#005a30}.legco-button:focus{border-color:#fd0;outline:3px solid transparent;box-shadow:inset 0 0 0 1px #fd0}.legco-button:before{content:\"\";display:block;position:absolute;top:-2px;right:-2px;bottom:-4px;left:-2px;background:transparent}.legco-button:active:before{top:-4px}.legco-fieldset{border:none;padding:0;margin-top:0;margin-right:0;margin-bottom:20px;margin-left:0;width:100%}@media(min-width: 40.0625em){.legco-fieldset{margin-bottom:30px}}.legco-fieldset .legco-form-group:last-of-type{margin-bottom:0}.legco-fieldset:last-child,.legco-fieldset:last-of-type{margin-bottom:0}.legco-label{display:block;margin-bottom:5px;font-size:1rem;line-height:1.25;color:#0b0c0c}@media(min-width: 40.0625em){.legco-label{font-size:1.1875rem;line-height:1.3157894737}}@media print{.legco-label{font-size:14pt;line-height:1.15}}@media print{.legco-label{color:#000}}.app-delimited{display:inline-block}.app-delimited__item{display:inline-block}.app-delimited__item:not(:first-of-type):not(:first-child)::before{content:\"，\";display:inline-block}","/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\r\n\r\n/* Document\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Use `border-box` so that `width` is not affected by `padding` or `border`.\r\n * 2. Change the default font-family in all browsers.\r\n * 3. Correct the line height in all browsers.\r\n * 4. Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS.\r\n */\r\n\r\n*,\r\n*::after,\r\n*::before {\r\n  box-sizing: border-box; // 1\r\n}\r\n\r\nhtml {\r\n  font-family: sans-serif; // 2\r\n  line-height: 1.15; // 3\r\n  -webkit-text-size-adjust: 100%; // 4\r\n}\r\n \r\n/* Sections\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove the margin in all browsers.\r\n */\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n/**\r\n * Render the `main` element consistently in IE.\r\n */\r\n\r\nmain {\r\n  display: block;\r\n}\r\n\r\n/**\r\n * Correct the font size and margin on `h1` elements within `section` and\r\n * `article` contexts in Chrome, Firefox, and Safari.\r\n */\r\n\r\nh1 {\r\n  font-size: 2em;\r\n  margin: 0.67em 0;\r\n}\r\n\r\n/* Grouping content\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Add the correct box sizing in Firefox.\r\n * 2. Show the overflow in Edge and IE.\r\n */\r\n\r\nhr {\r\n  box-sizing: content-box; /* 1 */\r\n  height: 0; /* 1 */\r\n  overflow: visible; /* 2 */\r\n}\r\n\r\n/**\r\n * 1. Correct the inheritance and scaling of font size in all browsers.\r\n * 2. Correct the odd `em` font sizing in all browsers.\r\n */\r\n\r\npre {\r\n  font-family: monospace, monospace; /* 1 */\r\n  font-size: 1em; /* 2 */\r\n}\r\n\r\n/* Text-level semantics\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove the gray background on active links in IE 10.\r\n */\r\n\r\na {\r\n  background-color: transparent;\r\n}\r\n\r\n/**\r\n * 1. Remove the bottom border in Chrome 57-\r\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\r\n */\r\n\r\nabbr[title] {\r\n  border-bottom: none; /* 1 */\r\n  text-decoration: underline; /* 2 */\r\n  text-decoration: underline dotted; /* 2 */\r\n}\r\n\r\n/**\r\n * Add the correct font weight in Chrome, Edge, and Safari.\r\n */\r\n\r\nb,\r\nstrong {\r\n  font-weight: bolder;\r\n}\r\n\r\n/**\r\n * 1. Correct the inheritance and scaling of font size in all browsers.\r\n * 2. Correct the odd `em` font sizing in all browsers.\r\n */\r\n\r\ncode,\r\nkbd,\r\nsamp {\r\n  font-family: monospace, monospace; /* 1 */\r\n  font-size: 1em; /* 2 */\r\n}\r\n\r\n/**\r\n * Add the correct font size in all browsers.\r\n */\r\n\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n\r\n/**\r\n * Prevent `sub` and `sup` elements from affecting the line height in\r\n * all browsers.\r\n */\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\n/* Embedded content\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove the border on images inside links in IE 10.\r\n */\r\n\r\nimg {\r\n  border-style: none;\r\n}\r\n\r\n/* Forms\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Change the font styles in all browsers.\r\n * 2. Remove the margin in Firefox and Safari.\r\n */\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  font-family: inherit; /* 1 */\r\n  font-size: 100%; /* 1 */\r\n  line-height: 1.15; /* 1 */\r\n  margin: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Show the overflow in IE.\r\n * 1. Show the overflow in Edge.\r\n */\r\n\r\nbutton,\r\ninput { /* 1 */\r\n  overflow: visible;\r\n}\r\n\r\n/**\r\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\r\n * 1. Remove the inheritance of text transform in Firefox.\r\n */\r\n\r\nbutton,\r\nselect { /* 1 */\r\n  text-transform: none;\r\n}\r\n\r\n/**\r\n * Correct the inability to style clickable types in iOS and Safari.\r\n */\r\n\r\nbutton,\r\n[type=\"button\"],\r\n[type=\"reset\"],\r\n[type=\"submit\"] {\r\n  -webkit-appearance: button;\r\n}\r\n\r\n/**\r\n * Remove the inner border and padding in Firefox.\r\n */\r\n\r\nbutton::-moz-focus-inner,\r\n[type=\"button\"]::-moz-focus-inner,\r\n[type=\"reset\"]::-moz-focus-inner,\r\n[type=\"submit\"]::-moz-focus-inner {\r\n  border-style: none;\r\n  padding: 0;\r\n}\r\n\r\n/**\r\n * Restore the focus styles unset by the previous rule.\r\n */\r\n\r\nbutton:-moz-focusring,\r\n[type=\"button\"]:-moz-focusring,\r\n[type=\"reset\"]:-moz-focusring,\r\n[type=\"submit\"]:-moz-focusring {\r\n  outline: 1px dotted ButtonText;\r\n}\r\n\r\n/**\r\n * Correct the padding in Firefox.\r\n */\r\n\r\nfieldset {\r\n  padding: 0.35em 0.75em 0.625em;\r\n}\r\n\r\n/**\r\n * 1. Correct the text wrapping in Edge and IE.\r\n * 2. Correct the color inheritance from `fieldset` elements in IE.\r\n * 3. Remove the padding so developers are not caught out when they zero out\r\n *    `fieldset` elements in all browsers.\r\n */\r\n\r\nlegend {\r\n  box-sizing: border-box; /* 1 */\r\n  color: inherit; /* 2 */\r\n  display: table; /* 1 */\r\n  max-width: 100%; /* 1 */\r\n  padding: 0; /* 3 */\r\n  white-space: normal; /* 1 */\r\n}\r\n\r\n/**\r\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\r\n */\r\n\r\nprogress {\r\n  vertical-align: baseline;\r\n}\r\n\r\n/**\r\n * Remove the default vertical scrollbar in IE 10+.\r\n */\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n * 1. Add the correct box sizing in IE 10.\r\n * 2. Remove the padding in IE 10.\r\n */\r\n\r\n[type=\"checkbox\"],\r\n[type=\"radio\"] {\r\n  box-sizing: border-box; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Correct the cursor style of increment and decrement buttons in Chrome.\r\n */\r\n\r\n[type=\"number\"]::-webkit-inner-spin-button,\r\n[type=\"number\"]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n/**\r\n * 1. Correct the odd appearance in Chrome and Safari.\r\n * 2. Correct the outline style in Safari.\r\n */\r\n\r\n[type=\"search\"] {\r\n  -webkit-appearance: textfield; /* 1 */\r\n  outline-offset: -2px; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove the inner padding in Chrome and Safari on macOS.\r\n */\r\n\r\n[type=\"search\"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n/**\r\n * 1. Correct the inability to style clickable types in iOS and Safari.\r\n * 2. Change font properties to `inherit` in Safari.\r\n */\r\n\r\n::-webkit-file-upload-button {\r\n  -webkit-appearance: button; /* 1 */\r\n  font: inherit; /* 2 */\r\n}\r\n\r\n/* Interactive\r\n   ========================================================================== */\r\n\r\n/*\r\n * Add the correct display in Edge, IE 10+, and Firefox.\r\n */\r\n\r\ndetails {\r\n  display: block;\r\n}\r\n\r\n/*\r\n * Add the correct display in all browsers.\r\n */\r\n\r\nsummary {\r\n  display: list-item;\r\n}\r\n\r\n/* Misc\r\n   ========================================================================== */\r\n\r\n/**\r\n * Add the correct display in IE 10+.\r\n */\r\n\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\n/**\r\n * Add the correct display in IE 10.\r\n */\r\n\r\n[hidden] {\r\n  display: none;\r\n}\r\n","body {\r\n  font-family: $legco-font-family;\r\n}\r\n\r\n.visually-hidden {\r\n  @include legco-visually-hidden;\r\n}\r\n","////\r\n/// @group settings/typography\r\n////\r\n\r\n// =================================================================\r\n// Font families\r\n// =================================================================\r\n\r\n/// Font stack for screen media\r\n///\r\n/// @type List\r\n/// @access public\r\n\r\n$legco-font-family: \r\n  -apple-system, \r\n  BlinkMacSystemFont, \r\n  'Segoe UI', \r\n  Roboto, \r\n  Oxygen, \r\n  Ubuntu, \r\n  Cantarell, \r\n  'Open Sans', \r\n  'Helvetica Neue', \r\n  sans-serif !default;\r\n\r\n/// Font stack for print media\r\n///\r\n/// @type List\r\n/// @access public\r\n\r\n$legco-font-family-print: sans-serif !default;\r\n\r\n/// Whether or not to include the default @font-face declarations\r\n///\r\n/// @type Boolean\r\n/// @access public\r\n\r\n$legco-include-default-font-face: true !default;\r\n\r\n// =================================================================\r\n// Font weight\r\n// =================================================================\r\n\r\n/// Font weight for regular typography\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-font-weight-regular: 400 !default;\r\n\r\n/// Font weight for bold typography\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-font-weight-bold: 700 !default;\r\n\r\n// =================================================================\r\n// Font sizes\r\n// =================================================================\r\n\r\n/// Whether or not to define font sizes in rem, improving accessibility by\r\n/// allowing users to adjust the base font size. This is enabled by default.\r\n///\r\n/// @type Boolean\r\n/// @access public\r\n\r\n$legco-typography-use-rem: true !default;\r\n\r\n/// Root font size\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-root-font-size: 16px !default;\r\n\r\n/// Responsive typography font map\r\n///\r\n/// This is used to generate responsive typography that adapts according to the\r\n/// media query breakpoints.\r\n///\r\n/// Font size and font weight can be defined for each breakpoint, and different types of\r\n/// devices (e.g. mobile, tablet) can have different behavior. The null breakpoint is for\r\n/// mobile.\r\n///\r\n/// Line-heights will be converted from pixel measurements to relative values automatically. For\r\n/// example, with a `font-size` of 16px and a `line-height` of 24px, the line height will become\r\n/// 1.5 in the output.\r\n///\r\n/// You can also specify a separate font size and line height for print media.\r\n///\r\n/// @type Map\r\n///\r\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\r\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\r\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\r\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\r\n///\r\n/// @access public\r\n\r\n$legco-typography-scale: (\r\n  80: (\r\n    null: (\r\n      font-size: 53px,\r\n      line-height: 55px\r\n    ),\r\n    tablet: (\r\n      font-size: 80px,\r\n      line-height: 80px\r\n    ),\r\n    print: (\r\n      font-size: 53pt,\r\n      line-height: 1.1\r\n    )\r\n  ),\r\n  48: (\r\n    null: (\r\n      font-size: 32px,\r\n      line-height: 35px\r\n    ),\r\n    tablet: (\r\n      font-size: 48px,\r\n      line-height: 50px\r\n    ),\r\n    print: (\r\n      font-size: 32pt,\r\n      line-height: 1.15\r\n    )\r\n  ),\r\n  36: (\r\n    null: (\r\n      font-size: 24px,\r\n      line-height: 25px\r\n    ),\r\n    tablet: (\r\n      font-size: 36px,\r\n      line-height: 40px\r\n    ),\r\n    print: (\r\n      font-size: 24pt,\r\n      line-height: 1.05\r\n    )\r\n  ),\r\n  27: (\r\n    null: (\r\n      font-size: 18px,\r\n      line-height: 20px\r\n    ),\r\n    tablet: (\r\n      font-size: 27px,\r\n      line-height: 30px\r\n    ),\r\n    print: (\r\n      font-size: 18pt,\r\n      line-height: 1.15\r\n    )\r\n  ),\r\n  24: (\r\n    null: (\r\n      font-size: 18px,\r\n      line-height: 20px\r\n    ),\r\n    tablet: (\r\n      font-size: 24px,\r\n      line-height: 30px\r\n    ),\r\n    print: (\r\n      font-size: 18pt,\r\n      line-height: 1.15\r\n    )\r\n  ),\r\n  19: (\r\n    null: (\r\n      font-size: 16px,\r\n      line-height: 20px\r\n    ),\r\n    tablet: (\r\n      font-size: 19px,\r\n      line-height: 25px\r\n    ),\r\n    print: (\r\n      font-size: 14pt,\r\n      line-height: 1.15\r\n    )\r\n  ),\r\n  16: (\r\n    null: (\r\n      font-size: 14px,\r\n      line-height: 16px\r\n    ),\r\n    tablet: (\r\n      font-size: 16px,\r\n      line-height: 20px\r\n    ),\r\n    print: (\r\n      font-size: 14pt,\r\n      line-height: 1.2\r\n    )\r\n  ),\r\n  14: (\r\n    null: (\r\n      font-size: 12px,\r\n      line-height: 15px\r\n    ),\r\n    tablet: (\r\n      font-size: 14px,\r\n      line-height: 20px\r\n    ),\r\n    print: (\r\n      font-size: 12pt,\r\n      line-height: 1.2\r\n    )\r\n  )\r\n) !default;\r\n","/// Hide an element visually, but have it available for screen readers\r\n///\r\n/// @access public\r\n\r\n@mixin legco-visually-hidden {\r\n  position: absolute !important;\r\n  // If margin is set to a negative value it can cause text to be announced in\r\n  // the wrong order in VoiceOver for OSX.\r\n  margin: 0 !important;\r\n  border: 0 !important;\r\n  padding: 0 !important;\r\n\r\n  // Screen readers skip elements with zero width or height so\r\n  // we use a positive value here.\r\n  width: 1px !important;\r\n  height: 1px !important;\r\n\r\n  overflow: hidden !important;\r\n  clip: rect(0 0 0 0) !important;\r\n  clip-path: inset(50%) !important;\r\n\r\n  white-space: nowrap;\r\n}\r\n","$heading-size-map: (\r\n  xl: (\r\n    font-scale: 48,\r\n    margin-scale: 8\r\n  ),\r\n  l: (\r\n    font-scale: 36,\r\n    margin-scale: 6\r\n  ),\r\n  m: (\r\n    font-scale: 24,\r\n    margin-scale: 4\r\n  ),\r\n  s: (\r\n    font-scale: 19,\r\n    margin-scale: 4\r\n  )\r\n);\r\n\r\n$caption-size-map: (\r\n  xl: (\r\n    font-scale: 27,\r\n    margin-scale: 1\r\n  ),\r\n  l: (\r\n    font-scale: 24,\r\n    margin-scale: 1\r\n  ),\r\n  m: (\r\n    font-scale: 19,\r\n    margin-scale: 0\r\n  )\r\n);\r\n\r\n$body-size-map: (\r\n  l: (\r\n    font-scale: 24,\r\n    margin-scale: 6\r\n  ),\r\n  m: (\r\n    font-scale: 19,\r\n    margin-scale: 4\r\n  ),\r\n  s: (\r\n    font-scale: 16,\r\n    margin-scale: 4\r\n  ),\r\n  xs: (\r\n    font-scale: 14,\r\n    margin-scale: 4\r\n  )\r\n);\r\n\r\n// Headings\r\n\r\n@each $size, $map in $heading-size-map {\r\n  %legco-heading-#{$size} {\r\n    display: block;\r\n    margin-top: 0;\r\n    @include legco-responsive-margin(map-get($map, \"margin-scale\"), \"bottom\");\r\n    @include legco-responsive-typography(map-get($map, \"font-scale\"));\r\n    font-weight: bold;\r\n    color: $legco-text-color;\r\n    @include legco-media-query($media-type: print) {\r\n      color: $legco-print-text-color;\r\n    }\r\n  }\r\n  .legco-heading-#{$size} {\r\n    @extend %legco-heading-#{$size};\r\n  }\r\n}\r\n\r\n// Captions to be used inside headings\r\n\r\n@each $size, $map in $caption-size-map {\r\n  %legco-caption-#{$size} {\r\n    display: block;\r\n    margin-bottom: legco-get-space(map-get($map, \"margin-scale\"));\r\n    @if $size == \"l\" {\r\n      @include legco-media-query($from: tablet) {\r\n        margin-bottom: 0;\r\n      }\r\n    }\r\n    @include legco-responsive-typography(map-get($map, \"font-scale\"));\r\n    color: $legco-secondary-text-color;\r\n  }\r\n  .legco-caption-#{$size} {\r\n    @extend %legco-caption-#{$size};\r\n  }\r\n}\r\n\r\n// Body (paragraphs)\r\n\r\n@each $size, $map in $body-size-map {\r\n  %legco-body-#{$size} {\r\n    margin-top: 0;\r\n    @include legco-responsive-margin(map-get($map, \"margin-scale\"), \"bottom\");\r\n    @include legco-responsive-typography(map-get($map, \"font-scale\"));\r\n    color: $legco-text-color;\r\n    @include legco-media-query($media-type: print) {\r\n      color: $legco-print-text-color;\r\n    }\r\n  }\r\n  .legco-body-#{$size} {\r\n    @extend %legco-body-#{$size};\r\n  }\r\n}\r\n\r\n.legco-body {\r\n  @extend .legco-body-m;\r\n}\r\n\r\n// Contextual adjustments\r\n// Adds top padding to headings that appear directly after paragraphs.\r\n\r\n%legco-body-l + %legco-heading-l {\r\n  padding-top: legco-get-space(1);\r\n  @include legco-media-query($from: tablet) {\r\n    padding-top: legco-get-space(2);\r\n  }\r\n}\r\n\r\n%legco-body-m + %legco-heading-l,\r\n%legco-body-s + %legco-heading-l,\r\n%legco-list + %legco-heading-l {\r\n  @include legco-responsive-padding(4, \"top\");\r\n}\r\n\r\n%legco-body-m + %legco-heading-m,\r\n%legco-body-s + %legco-heading-m,\r\n%legco-list + %legco-heading-m,\r\n%legco-body-m + %legco-heading-s,\r\n%legco-body-s + %legco-heading-s,\r\n%legco-list + %legco-heading-s {\r\n  padding-top: legco-get-space(1);\r\n  @include legco-media-query($from: tablet) {\r\n    padding-top: legco-get-space(2);\r\n  }\r\n}\r\n","/// Responsive spacing\r\n///\r\n/// Adds responsive spacing (either padding or margin)\r\n/// by fetching a spacing map from the responsive spacing scale, which defines\r\n/// spacing values at different breakpoints.\r\n///\r\n/// Used in `legco-responsive-margin` or `legco-responsive-padding` mixins\r\n///\r\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\r\n///   scale, corresponds to a map of breakpoints and spacing values\r\n/// @param {String} $property - Property to add spacing to (e.g. `margin`)\r\n/// @param {String} $direction [all] - Direction to add spacing to\r\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\r\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\r\n///\r\n/// @access private\r\n\r\n@mixin _legco-responsive-spacing(\r\n  $responsive-spacing-point, \r\n  $property, \r\n  $direction: \"all\", \r\n  $important: false, \r\n  $adjustment: false) {\r\n\r\n  $actual-input-type: type-of($responsive-spacing-point);\r\n  @if $actual-input-type != \"number\" {\r\n    @error \"Expected an integer, but got a #{$actual-input-type}.\";\r\n  }\r\n\r\n  @if not map-has-key($legco-spacing-responsive-scale, $responsive-spacing-point) {\r\n    @error \"Unknown spacing point: `#{$responsive-spacing-point}`. Make sure you are using a point from the \"\r\n    + \"responsive spacing scale.\";\r\n  }\r\n\r\n  // Make sure the value `$responsive-spacing-point` corresponds to is a map\r\n  $scale-map: map-get($legco-spacing-responsive-scale, $responsive-spacing-point);\r\n  $actual-map-type: type-of($scale-map);\r\n  @if $actual-map-type != \"map\" {\r\n    @error \"Expected a map, but got a #{$actual-map-type}. Make sure you are using a map to set the \"\r\n    + \"responsive spacing.\";\r\n  }\r\n\r\n  // Loop through each breakpoint in the map\r\n  @each $breakpoint, $breakpoint-value in $scale-map {\r\n    @if ($adjustment) {\r\n      $breakpoint-value: $breakpoint-value + $adjustment;\r\n    }\r\n\r\n    // The `null` breakpoint is for mobile\r\n    @if $breakpoint == null {\r\n      @if $direction == all {\r\n        #{$property}: $breakpoint-value if($important, !important, null);\r\n      } @else {\r\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\r\n      }\r\n    } @else {\r\n      @include legco-media-query($from: $breakpoint) {\r\n        @if $direction == all {\r\n          #{$property}: $breakpoint-value if($important, !important, null);\r\n        } @else {\r\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/// Responsive margin\r\n///\r\n/// Adds responsive margin by fetching a \"spacing map\" from the responsive\r\n/// spacing scale, which defines different spacing values at different\r\n/// breakpoints. Wrapper for the `_legco-responsive-spacing` mixin.\r\n///\r\n/// @see {mixin} _legco-responsive-spacing\r\n///\r\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\r\n///   scale, corresponds to a map of breakpoints and spacing values\r\n/// @param {String} $direction [all] - Direction to add spacing to\r\n///   (`top`, `right`, `bottom`, `left`, `all`)\r\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\r\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\r\n///\r\n/// @example scss\r\n///   .element {\r\n///     @include legco-responsive-margin(6, \"left\", $adjustment, 1px);\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-responsive-margin($responsive-spacing-point, $direction: \"all\", $important: false, $adjustment: false) {\r\n  @include _legco-responsive-spacing($responsive-spacing-point, \"margin\", $direction, $important, $adjustment);\r\n}\r\n\r\n/// Responsive padding\r\n///\r\n/// Adds responsive adding by fetching a \"spacing map\" from the responsive\r\n/// spacing scale, which defines different spacing values at different\r\n/// breakpoints. Wrapper for the `_legco-responsive-spacing` mixin.\r\n///\r\n/// @see {mixin} _legco-responsive-spacing\r\n///\r\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\r\n///   scale, corresponds to a map of breakpoints and spacing values\r\n/// @param {String} $direction [all] - Direction to add spacing to\r\n///   (`top`, `right`, `bottom`, `left`, `all`)\r\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\r\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\r\n///\r\n/// @example scss\r\n///   .element {\r\n///     @include legco-responsive-padding(6, \"left\", $adjustment, 1px);\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-responsive-padding($responsive-spacing-point, $direction: \"all\", $important: false, $adjustment: false) {\r\n  @include _legco-responsive-spacing($responsive-spacing-point, \"padding\", $direction, $important, $adjustment);\r\n}\r\n","/// Responsive typography helper\r\n///\r\n/// Takes a font map to create font size and line height declaration for\r\n/// different breakpoints, and for print.\r\n///\r\n/// Example font map\r\n///\r\n/// $my-font-map: (\r\n///   null: (\r\n///     font-size: 16px,\r\n///     line-height: 20px\r\n///   ),\r\n///   tablet: (\r\n///     font-size: 19px,\r\n///     line-height: 25px\r\n///   ),\r\n///   print: (\r\n///     font-size: 14pt,\r\n///     line-height: 1.15\r\n///   )\r\n/// );\r\n///\r\n/// @param {Map} $font-map - Font map\r\n///\r\n/// @access public\r\n\r\n@mixin legco-responsive-typography($size) {\r\n  @if not map-has-key($legco-typography-scale, $size) {\r\n    @error \"Unknown font size: `#{$size}`. Expected a point from the responsive typography scale.\";\r\n  }\r\n\r\n  $font-map: map-get($legco-typography-scale, $size);\r\n\r\n  @each $breakpoint, $breakpoint-map in $font-map {\r\n    $font-size: map-get($breakpoint-map, \"font-size\");\r\n    $font-size-rem: legco-px-to-rem($font-size);\r\n    $line-height: _legco-convert-line-height(\r\n      map-get($breakpoint-map, \"line-height\"),\r\n      $font-size\r\n    );\r\n\r\n    @if $breakpoint == null {\r\n      @if $legco-typography-use-rem {\r\n        font-size: $font-size-rem;\r\n      } @else {\r\n        font-size: $font-size;\r\n      }\r\n      line-height: $line-height;\r\n    } @else if $breakpoint == \"print\" {\r\n      @include legco-media-query($media-type: print) {\r\n        font-size: $font-size;\r\n        line-height: $line-height;\r\n      }\r\n    } @else {\r\n      @include legco-media-query($from: $breakpoint) {\r\n        @if $legco-typography-use-rem {\r\n          font-size: $font-size-rem;\r\n        } @else {\r\n          font-size: $font-size;\r\n        }\r\n        line-height: $line-height;  \r\n      }\r\n    }\r\n  }\r\n}\r\n","////\r\n/// @group settings/colors\r\n////\r\n\r\n@import '../helpers/colors';\r\n\r\n// =================================================================\r\n// Generic\r\n// =================================================================\r\n\r\n/// Brand color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-brand-color: legco-get-color(\"blue\") !default;\r\n\r\n/// Text color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-text-color: legco-get-color(\"black\") !default;\r\n\r\n/// Secondary text color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-secondary-text-color: legco-get-color(\"dark-grey\") !default;\r\n\r\n/// Body background color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-body-background-color: legco-get-color(\"white\") !default;\r\n\r\n/// Canvas background color\r\n///\r\n/// Used by the footer component to give the illusion of a long\r\n/// footer.\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-canvas-background-color: legco-get-color(\"light-grey\") !default;\r\n\r\n/// Text color for print media\r\n///\r\n/// Use \"true black\" to avoid printers using color ink to print body text\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-print-text-color: #000000 !default;\r\n\r\n/// Focus color\r\n///\r\n/// Used for outline (and background, where appropriate) when interactive\r\n/// elements (e.g. links and form controls) get focus\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-focus-color: legco-get-color(\"yellow\") !default;\r\n\r\n/// Focused text color\r\n///\r\n/// Ensure that text has sufficient contrast between itself and background\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-focus-text-color: legco-get-color(\"black\") !default;\r\n\r\n/// Error color\r\n///\r\n/// Used to highlight error messages and form controls in an error state\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-error-color: legco-get-color(\"red\") !default;\r\n\r\n/// Border color\r\n///\r\n/// Used for borders, separators, rules, keylines, etc.\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-border-color: legco-get-color(\"mid-grey\");\r\n\r\n/// Input border color\r\n///\r\n/// Used for form controls\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-input-border-color: legco-get-color(\"black\") !default;\r\n\r\n/// Input hover color\r\n///\r\n/// Used for hover states on form controls\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-hover-color: legco-get-color(\"mid-grey\") !default;\r\n\r\n// =================================================================\r\n// Links colors\r\n// =================================================================\r\n\r\n/// Link color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-color: legco-get-color(\"blue\") !default;\r\n\r\n/// Visited link color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-visited-color: legco-get-color(\"purple\") !default;\r\n\r\n/// Link hover color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-hover-color: legco-get-color(\"dark-blue\") !default;\r\n\r\n/// Active link color\r\n///\r\n/// @type Color\r\n/// @access public\r\n\r\n$legco-link-active-color: legco-get-color(\"black\") !default;\r\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n///\n/// Do not override this value, or things will break\n///\n/// @link https://github.com/sass-mq/sass-mq/issues/122\n/// @deprecated This setting will be removed in sass-mq v6.0.0\n/// @access private\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (such as the layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   $mq-show-breakpoints: (mobile, tablet, desktop);\n///   @import 'path/to/mq';\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if ($mq-base-font-size != 16px) {\n        @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if ($base-font-size != 16px) {\n        @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $until [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$mq-media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$mq-breakpoints]\n/// @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",".legco-container {\r\n  @include legco-width-container;\r\n}\r\n","////\r\n/// @group settings/measurements\r\n////\r\n\r\n// =================================================================\r\n// Media query breakpoints\r\n// =================================================================\r\n\r\n/// Breakpoint definitions\r\n///\r\n/// @type Map\r\n/// @access public\r\n\r\n$legco-breakpoints: (\r\n  mobile: 320px,\r\n  tablet: 641px,\r\n  desktop: 769px\r\n) !default;\r\n\r\n// =================================================================\r\n// Spacing\r\n// =================================================================\r\n\r\n/// Single point spacing variables. Access using `legco-get-space()`.\r\n///\r\n/// @type Map\r\n/// @access private\r\n\r\n$legco-spacing-points: (\r\n  0: 0,\r\n  1: 5px,\r\n  2: 10px,\r\n  3: 15px,\r\n  4: 20px,\r\n  5: 25px,\r\n  6: 30px,\r\n  7: 40px,\r\n  8: 50px,\r\n  9: 60px\r\n) !default;\r\n\r\n/// Responsive spacing map\r\n///\r\n/// Used for generating responsive spacing that adapts\r\n/// according to the media query breakpoints.\r\n///\r\n/// Access responsive spacing with `legco-responsive-margin` or\r\n/// `legco-responsive-padding` mixins.\r\n///\r\n/// @type Map\r\n/// @access private\r\n\r\n$legco-spacing-responsive-scale: (\r\n  0: (\r\n    null: 0,\r\n    tablet: 0\r\n  ),\r\n  1: (\r\n    null: 5px,\r\n    tablet: 5px\r\n  ),\r\n  2: (\r\n    null: 10px,\r\n    tablet: 10px\r\n  ),\r\n  3: (\r\n    null: 15px,\r\n    tablet: 15px\r\n  ),\r\n  4: (\r\n    null: 15px,\r\n    tablet: 20px\r\n  ),\r\n  5: (\r\n    null: 15px,\r\n    tablet: 25px\r\n  ),\r\n  6: (\r\n    null: 20px,\r\n    tablet: 30px\r\n  ),\r\n  7: (\r\n    null: 25px,\r\n    tablet: 40px\r\n  ),\r\n  8: (\r\n    null: 30px,\r\n    tablet: 50px\r\n  ),\r\n  9: (\r\n    null: 40px,\r\n    tablet: 60px\r\n  )\r\n) !default;\r\n\r\n// =================================================================\r\n// Page layout\r\n// =================================================================\r\n\r\n/// Width of main container\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-page-width: 960px !default;\r\n\r\n/// Map of grid column widths\r\n///\r\n/// @type Map\r\n/// @access public\r\n\r\n$legco-grid-widths: (\r\n  one-quarter: 25%,\r\n  one-third: 33.3333%,\r\n  one-half: 50%,\r\n  two-thirds: 66.6666%,\r\n  three-quarters: 75%,\r\n  full: 100%\r\n) !default;\r\n\r\n/// Width of gutter between grid columns\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-gutter: 30px !default;\r\n\r\n// =================================================================\r\n// Borders\r\n// =================================================================\r\n\r\n/// Standard border width\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width: 5px !default;\r\n\r\n/// Wide border width\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width-wide: 10px !default;\r\n\r\n/// Narrow border width\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width-narrow: 4px !default;\r\n\r\n/// Form control border width\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width-form-element: 2px !default;\r\n\r\n/// Form control border width when in error state\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width-form-element-error: 4px !default;\r\n\r\n/// Form group border width when in error state\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-border-width-form-group-error: $legco-border-width !default;\r\n\r\n/// Border width of focus outline\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-focus-width: 3px !default;\r\n\r\n/// Hover width for form controls with a hover state\r\n///\r\n/// @type Number\r\n/// @access public\r\n\r\n$legco-hover-width: 10px !default;\r\n","/// Width container mixin\r\n///\r\n/// Used to create page width and custom width container classes\r\n///\r\n/// @param {String} $width [$legco-page-width] - Width in pixels\r\n///\r\n/// @example scss - Creating a 1200px wide container class\r\n///   .app-width-container--wide {\r\n///     @include legco-width-container(1200px);\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-width-container($width: $legco-page-width) {\r\n  max-width: $width;\r\n\r\n  // On mobile, add half width gutters\r\n  margin-left: $legco-gutter / 2;\r\n  margin-right: $legco-gutter / 2;\r\n\r\n  // On tablet, add full width gutters\r\n  @include legco-media-query($from: tablet) {\r\n    margin-left: $legco-gutter;\r\n    margin-right: $legco-gutter;\r\n  }\r\n\r\n  // As soon as the viewport is greater than the container width plus the gutters, \r\n  // center the content instead of adding gutters\r\n  @include legco-media-query($and: \"(min-width: #{ $width + $legco-gutter * 2 })\") {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n}\r\n",".legco-grid-row {\r\n  @include legco-clearfix;\r\n  margin-right: - $legco-gutter / 2;\r\n  margin-left: - $legco-gutter / 2;\r\n}\r\n\r\n@each $width in map-keys($legco-grid-widths) {\r\n  .legco-grid-column-#{$width} {\r\n    @include legco-grid-column($width);\r\n  }\r\n}\r\n\r\n@each $width in map-keys($legco-grid-widths) {\r\n  .legco-grid-column-#{$width}-desktop {\r\n    @include legco-grid-column($width, $at: desktop);\r\n  }\r\n}\r\n","////\r\n/// @group helpers/layout\r\n////\r\n\r\n/// Clear floated content within a container using a pseudo element\r\n///\r\n/// @access public\r\n\r\n@mixin legco-clearfix {\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n}\r\n","/// Generate grid system styles\r\n///\r\n/// Creates a grid column with standard gutter and specified width.\r\n///\r\n/// By default the column width changes from 100% to specified width at the\r\n/// `tablet` breakpoint, but other breakpoints can be specified using the `$at`\r\n/// parameter.\r\n///\r\n/// @param {String} $width [full] - Name of a grid width from `$legco-grid-widths`\r\n/// @param {String} $float [left] - Float direction\r\n/// @param {String} $float [tablet] - mobile | tablet | desktop | any custom breakpoints\r\n///\r\n/// @example scss - Default\r\n///   .legco-grid-column-two-thirds {\r\n///      @include legco-grid-column(two-thirds);\r\n///   }\r\n///\r\n/// @example scss - Column width changes at the `desktop` breakpoint\r\n///   .legco-grid-column-one-half-at-desktop {\r\n///     @include legco-grid-column(one-half, $at: desktop);\r\n///   }\r\n/// @example scss - Columns float to the right\r\n///   .legco-grid-column-one-half-right {\r\n///     @include legco-grid-column(one-half, $float: right);\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-grid-column($width: full, $float: left, $at: tablet) {\r\n  box-sizing: border-box;\r\n  @if $at != desktop {\r\n    width: 100%;\r\n  }\r\n  padding: 0 $legco-gutter / 2;\r\n  @include legco-media-query($from: $at) {\r\n    width: legco-get-grid-width-in-percentage($width);\r\n    float: $float;\r\n  }\r\n}\r\n",".legco-form-group {\r\n  @include legco-clearfix;\r\n  @include legco-responsive-margin(6, \"bottom\");\r\n\r\n  .legco-form-group:last-of-type {\r\n    margin-bottom: 0; // Remove margin from last item in nested groups\r\n  }\r\n\r\n  &:last-child,\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.legco-form-group--error {\r\n  padding-left: legco-get-space(3);\r\n  border-left: $legco-border-width-form-group-error solid $legco-error-color;\r\n\r\n  .legco-form-group {\r\n    // Reset error styles in nested form groups that might have error class\r\n    padding-left: 0;\r\n    border-left: 0;\r\n  }\r\n}\r\n","/// Link styles\r\n/// Provides the default link styles for normal, visited, hover, and active states.\r\n///\r\n/// @example scss\r\n///   .legco-component__link {\r\n///     @include legco-link-style;\r\n///   }\r\n///\r\n/// @access public\r\n\r\n@mixin legco-link-style-default {\r\n  &:link {\r\n    color: $legco-link-color;\r\n  }\r\n  &:visited {\r\n    color: $legco-link-visited-color;\r\n  }\r\n  &:hover {\r\n    color: $legco-link-hover-color;\r\n  }\r\n  &:active {\r\n    color: $legco-link-active-color;\r\n  }\r\n  &:focus {\r\n    color: $legco-focus-text-color;\r\n  }\r\n}\r\n\r\n/// Muted link styles\r\n///\r\n/// Used for secondary links, which appear in muted colors regardless of visited states.\r\n///\r\n/// @access public\r\n\r\n@mixin legco-link-style-muted {\r\n  &:link,\r\n  &:visited,\r\n  &:hover,\r\n  &:active {\r\n    color: $legco-secondary-text-color;\r\n  }\r\n\r\n  &:focus {\r\n    color: $legco-focus-text-color;\r\n  }\r\n}\r\n\r\n/// Links that look like text\r\n///\r\n/// Used by navigation components, such as breadscrumbs and the back list.\r\n///\r\n/// @access public\r\n\r\n@mixin legco-link-style-text {\r\n  &:link,\r\n  &:visited,\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: $legco-text-color;\r\n  }\r\n}\r\n","%legco-link {\r\n  $font-family: $legco-font-family;\r\n  @include legco-media-query($media-type: print) {\r\n    $font-family: $legco-font-family-print;\r\n  }\r\n  @include legco-link-style-default;\r\n\r\n  &:focus {\r\n    @include legco-focused-text;\r\n  }\r\n}\r\n\r\n.legco-link {\r\n  @extend %legco-link;\r\n}\r\n\r\n// Variant classes should be used in conjunction with the `.legco-link`\r\n// class.\r\n\r\n.legco-link--muted {\r\n  @include legco-link-style-muted;\r\n}\r\n\r\n.legco-link--text-color {\r\n  @include legco-link-style-text;\r\n}","/// Focused text\r\n///\r\n/// Provides an outline to clearly show when the target element is focused.\r\n/// Used for interactive text-based elements.\r\n///\r\n/// @access public\r\n\r\n@mixin legco-focused-text {\r\n  outline: $legco-focus-width solid transparent;\r\n  color: $legco-focus-text-color;\r\n  background-color: $legco-focus-color;\r\n  box-shadow: 0 -2px $legco-focus-color, 0 4px $legco-focus-text-color;\r\n  text-decoration: none;\r\n}\r\n\r\n@mixin legco-delimited-text($delimiter: '') {\r\n  display: inline-block;\r\n  &:not(:first-of-type):not(:first-child)::before {\r\n    content: \"#{$delimiter}\";\r\n    display: inline-block;\r\n  }\r\n}\r\n","%legco-list {\r\n  color: $legco-text-color;\r\n  @include legco-media-query($media-type: print) {\r\n    color: $legco-print-text-color;\r\n  }\r\n  @include legco-responsive-typography($size: 19);\r\n\r\n  margin-top: 0;\r\n  @include legco-responsive-margin(4, \"bottom\");\r\n  padding-left: 0;\r\n  \r\n  list-style-type: none;\r\n\r\n  // Add a top margin for nested lists\r\n  %legco-list {\r\n    margin-top: legco-get-space(2);\r\n  }\r\n}\r\n\r\n%legco-list > li {\r\n  // Lists without numeric or bullet markers should have extra space between\r\n  // list items.\r\n  margin-bottom: legco-get-space(1);\r\n}\r\n\r\n.legco-list {\r\n  @extend %legco-list;\r\n}\r\n\r\n%legco-list--bullet {\r\n  padding-left: legco-get-space(4);\r\n  list-style-type: disc;\r\n}\r\n\r\n%legco-list--number {\r\n  padding-left: legco-get-space(4);\r\n  list-style-type: decimal;\r\n}\r\n\r\n%legco-list--bullet > li,\r\n%legco-list--number > li {\r\n  // numbered and bullet list items have extra vertical margin on tablets and\r\n  // desktops, but not on mobile devices\r\n  margin-bottom: 0;\r\n  @include legco-media-query($from: tablet) {\r\n    margin-bottom: legco-get-space(1);\r\n  }\r\n}\r\n\r\n.legco-list--bullet {\r\n  @extend %legco-list--bullet;\r\n}\r\n\r\n.legco-list--number {\r\n  @extend %legco-list--number;\r\n}\r\n","$legco-button-background-color: legco-get-color(\"green\");\r\n$legco-button-hover-color: legco-get-shade($legco-button-background-color, 20%);\r\n$legco-button-shadow-color: legco-get-shade($legco-button-background-color, 60%);\r\n$legco-button-text-color: legco-get-color(\"white\");\r\n$legco-button-border-width: $legco-border-width-form-element;\r\n\r\n// Because shadow is visually part of the button, we need to reduce\r\n// the height of the button [1] and increase the bottom margin to\r\n// include it.\r\n$legco-button-shadow-size: $legco-border-width-form-element;\r\n\r\n.legco-button {\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  margin-bottom: $legco-button-shadow-size;\r\n  border: $legco-button-border-width solid transparent;\r\n  padding: (legco-get-space(2) - $legco-button-shadow-size / 2) legco-get-space(2);\r\n\r\n  width: 100%;\r\n  @include legco-media-query($from: tablet) {\r\n    width: auto;\r\n  }\r\n  @include legco-responsive-typography(19);\r\n  color: $legco-button-text-color;\r\n  background-color: $legco-button-background-color;\r\n\r\n  box-shadow: 0 $legco-button-shadow-size 0 $legco-button-shadow-color;\r\n\r\n  text-align: center;\r\n  vertical-align: top;\r\n  cursor: pointer;\r\n\r\n  -webkit-appearance: none;\r\n\r\n  // Override any global link styles\r\n  &:link,\r\n  &:visited,\r\n  &:active,\r\n  &:hover {\r\n    color: $legco-button-text-color;\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:active {\r\n    // Bump the button down so it looks like it's being pressed in\r\n    top: $legco-button-shadow-size;\r\n  }\r\n\r\n  // Fix unwanted button padding in Firefox\r\n  &::-moz-focus-inner {\r\n    padding: 0;\r\n    border: 0;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: $legco-button-hover-color;\r\n  }\r\n\r\n  &:focus {\r\n    border-color: $legco-focus-color;\r\n    outline: $legco-focus-width solid transparent;\r\n\r\n    box-shadow: inset 0 0 0 1px $legco-focus-color;\r\n  }\r\n\r\n  // Expand interactive area to include the shadow.\r\n  //\r\n  // This does not work for `<input type=\"button\">` as non-container\r\n  // elements cannot include pseudo elements (i.e. :before).\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    // If we used `top: 0`, we would be missing out the border.\r\n    top: - $legco-button-border-width;\r\n    right: - $legco-button-border-width;\r\n    bottom: - ($legco-button-shadow-size + $legco-button-border-width);\r\n    left: - $legco-button-border-width;\r\n    background: transparent;\r\n  }\r\n\r\n  // When the button is active, it is shifted down to denote a \r\n  // \"pressed\" state. If the user happened to click at the\r\n  // very top of the button, their cursor is no longer over\r\n  // the button (because it has \"moved beneath them\") and so\r\n  // the click event is not fired.\r\n  //\r\n  // The following snippet corrects that by shifting the top\r\n  // of the pseudo element so that it continues to cover the\r\n  // area the user clicked, which means the click event is\r\n  // still fired. 🎉\r\n  &:active:before {\r\n    top: -($legco-button-border-width + $legco-button-shadow-size);\r\n  }\r\n}\r\n\r\n// TODO: add buttons with an accent\r\n",".legco-fieldset {\r\n  border: none;\r\n  padding: 0;\r\n  margin-top: 0;\r\n  margin-right: 0;\r\n  // Add bottom margin on all fieldsets except the last one\r\n  @include legco-responsive-margin(6, \"bottom\");\r\n\r\n  .legco-form-group:last-of-type {\r\n    margin-bottom: 0; // Remove margin from last item in nested groups\r\n  }\r\n\r\n  &:last-child,\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  margin-left: 0;\r\n\r\n  width: 100%;\r\n}\r\n",".legco-label {\r\n  display: block;\r\n  margin-bottom: legco-get-space(1);\r\n  @include legco-responsive-typography(19);\r\n\r\n  color: $legco-text-color;\r\n  @include legco-media-query($media-type: print) {\r\n    color: $legco-print-text-color;\r\n  }\r\n}\r\n","$app-delimiter-default: \"，\";\r\n\r\n.app-delimited {\r\n  display: inline-block;\r\n}\r\n\r\n.app-delimited__item {\r\n  @include legco-delimited-text($app-delimiter-default);\r\n}\r\n"]}